<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gome.gmhx.dao.servicemanage.HxServiceLongDistanceDao" >
  <resultMap id="BaseResultMap" type="com.gome.gmhx.entity.HxServiceLongDistance" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 05 15:17:54 CST 2014.
    -->
    <result column="apply_id" property="applyId" jdbcType="VARCHAR" />
    <result column="apply_unit" property="applyUnit" jdbcType="VARCHAR" />
    <result column="sequence" property="sequence" jdbcType="INTEGER" />
    <result column="mileage" property="mileage" jdbcType="REAL" />
    <result column="other_fee" property="otherFee" jdbcType="REAL" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
    <result column="customer_phone" property="customerPhone" jdbcType="VARCHAR" />
    <result column="customer_address" property="customerAddress" jdbcType="VARCHAR" />
    <result column="machine_type" property="machineType" jdbcType="VARCHAR" />
    <result column="gome_code" property="gomeCode" jdbcType="VARCHAR" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="machine_code" property="machineCode" jdbcType="VARCHAR" />
    <result column="internal_machine_code1" property="internalMachineCode1" jdbcType="VARCHAR" />
    <result column="internal_machine_code2" property="internalMachineCode2" jdbcType="VARCHAR" />
    <result column="external_machine_code" property="externalMachineCode" jdbcType="VARCHAR" />
    <result column="buy_date" property="buyDate" jdbcType="TIMESTAMP" />
    <result column="install_man" property="installMan" jdbcType="VARCHAR" />
    <result column="install_date" property="installDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="is_center_check_agree" property="isCenterCheckAgree" jdbcType="VARCHAR" />
    <result column="center_check_comment" property="centerCheckComment" jdbcType="VARCHAR" />
    <result column="center_check_man" property="centerCheckMan" jdbcType="VARCHAR" />
    <result column="center_check_date" property="centerCheckDate" jdbcType="TIMESTAMP" />
    <result column="is_headquarters_check_agree" property="isHeadquartersCheckAgree" jdbcType="VARCHAR" />
    <result column="headquarters_check_comment" property="headquartersCheckComment" jdbcType="VARCHAR" />
    <result column="headquarters_check_man" property="headquartersCheckMan" jdbcType="VARCHAR" />
    <result column="headquarters_check_date" property="headquartersCheckDate" jdbcType="TIMESTAMP" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="create_man_s" property="createManS" jdbcType="VARCHAR" />
    <result column="create_organization_s" property="createOrganizationS" jdbcType="VARCHAR" />
    <result column="create_time_s" property="createTimeS" jdbcType="TIMESTAMP" />
    <result column="alter_man_s" property="alterManS" jdbcType="VARCHAR" />
    <result column="alter_organization_s" property="alterOrganizationS" jdbcType="VARCHAR" />
    <result column="alter_time_s" property="alterTimeS" jdbcType="TIMESTAMP" />
    <result column="process_instance_id" property="processInstanceId" jdbcType="VARCHAR" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="apply_date" property="applyDate" jdbcType="TIMESTAMP" />
    <result column="service_unit" property="serviceUnit" jdbcType="VARCHAR" />
    <result column="is_effective" property="isEffective" jdbcType="BIT" />
    <result column="create_position" property="createPosition" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 05 15:17:54 CST 2014.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 05 15:17:54 CST 2014.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 05 15:17:54 CST 2014.
    -->
    apply_id, apply_unit, sequence, mileage, other_fee, customer_name, customer_phone, 
    customer_address, machine_type, gome_code, brand, machine_code, internal_machine_code1, 
    internal_machine_code2, external_machine_code, buy_date, install_man, install_date, 
    status, is_center_check_agree, center_check_comment, center_check_man, center_check_date, 
    is_headquarters_check_agree, headquarters_check_comment, headquarters_check_man, 
    headquarters_check_date, comment, create_man_s, create_organization_s, create_time_s, 
    alter_man_s, alter_organization_s, alter_time_s, process_instance_id, applicant, apply_date,
    serviceUnit,isEffective,createPosition
  </sql>
  <select id="getMaxSequence" resultType="Integer">
  	SELECT MAX(sequence) FROM hx_service_long_distance WHERE STR_TO_DATE(create_time_s,'%Y-%m-%d')=CURDATE()
  </select>
  <select id="getApplyPageList" parameterType="com.gome.common.page.Page" resultType="hashmap">
  	SELECT 
	T.apply_id, v6.name apply_unit, T.sequence, T.mileage, T.other_fee, T.customer_name, T.customer_phone, 
	T.customer_address, T.machine_type, v1.code_value gome_code, T.brand, T.machine_code, T.internal_machine_code1, 
	T.internal_machine_code2, T.external_machine_code, T.buy_date, T.install_man, T.install_date, 
	v3.code_value status, v4.code_value is_center_check_agree, T.center_check_comment, T.center_check_man, T.center_check_date, 
	v5.code_value is_headquarters_check_agree, T.headquarters_check_comment, T.headquarters_check_man, 
	T.headquarters_check_date, T.comment, v9.user_name create_man_s, v7.name create_organization_s , T.create_time_s, 
	v10.user_name alter_man_s, v8.name alter_organization_s, T.alter_time_s, T.process_instance_id, T.applicant, T.apply_date,T.service_unit,T.is_effective,
	T.create_position
	FROM hx_service_long_distance T
	LEFT JOIN v_code v1 ON v1.code_id='gmdm' AND T.gome_code=v1.code_key
	<!-- LEFT JOIN v_code v2 ON v2.code_id='pp' AND T.brand=v2.code_key -->
	LEFT JOIN v_code v3 ON v3.code_id='djzt' AND T.status=v3.code_key
	LEFT JOIN v_code v4 ON v4.code_id='sf' AND T.is_center_check_agree=v4.code_key
	LEFT JOIN v_code v5 ON v5.code_id='sf' AND T.is_headquarters_check_agree=v5.code_key
	LEFT JOIN (SELECT cw.azwd01 AS CODE,cw.wdmc AS NAME FROM crm_website cw UNION 
	SELECT ho.org_code AS CODE ,ho.org_name AS NAME FROM hx_organization ho WHERE ho.org_type='02' OR org_type='03' UNION 
	SELECT es.WERKS CODE,es.NAME1 NAME FROM ecc_store es WHERE es.VKORG LIKE 'S%') v6 ON v6.code=T.apply_unit
	LEFT JOIN hx_user_unload v9 ON v9.user_login_name = T.create_man_s
	LEFT JOIN hx_user_unload v10 ON v10.user_login_name = T.alter_man_s
	LEFT JOIN v_organization v7 ON v7.id=T.create_organization_s
	LEFT JOIN v_organization v8 ON v8.id=T.alter_organization_s
	WHERE 1=1
	<if test="param.createOrganization != null and param.createOrganization !=''">and FIND_IN_SET(T.create_organization_s,#{param.createOrganization})</if>
	<if test="param.applyId != null and param.applyId !=''">and T.apply_id like CONCAT('%',#{param.applyId},'%')</if>
	<if test="param.applyUnit != null and param.applyUnit !=''">and T.apply_unit like CONCAT('%',#{param.applyUnit},'%')</if>
	<if test="param.mileage != null and param.mileage !=''">and T.mileage like CONCAT('%',#{param.mileage},'%')</if>
	<if test="param.customerName != null and param.customerName !=''">and T.customer_name like CONCAT('%',#{param.customerName},'%')</if>
	<if test="param.machineType != null and param.machineType !=''">and T.machine_type like CONCAT('%',#{param.machineType},'%')</if>
	<if test="param.gomeCode != null and param.gomeCode !=''">and T.gome_code like CONCAT('%',#{param.gomeCode},'%')</if>
	<if test="param.brand != null and param.brand !=''">and T.brand like CONCAT('%',#{param.brand},'%')</if>
	<if test="param.machineCode != null and param.machineCode !=''">and T.machine_code like CONCAT('%',#{param.machineCode},'%')</if>
	<if test="param.internalMachineCode1 != null and param.internalMachineCode1 !=''">and T.internal_machine_code1 like CONCAT('%',#{param.internalMachineCode1},'%')</if>
	<if test="param.internalMachineCode2 != null and param.internalMachineCode2 !=''">and T.internal_machine_code2 like CONCAT('%',#{param.internalMachineCode2},'%')</if>
	<if test="param.externalMachineCode != null and param.externalMachineCode !=''">and T.external_machine_code like CONCAT('%',#{param.externalMachineCode},'%')</if>
	<if test="param.status != null and param.status !=''">and T.status like CONCAT('%',#{param.status},'%')</if>
	<if test="param.isHeadquartersCheckAgree != null and param.isHeadquartersCheckAgree !=''">and T.is_headquarters_check_agree like CONCAT('%',#{param.isHeadquartersCheckAgree},'%')</if>
	<!-- <if test="param.isFillForm != null and param. !=''">and T. like CONCAT('%',#{param.},'%')</if> -->
	
	<if test="param.mod_buyDate_st !=null and param.mod_buyDate_st != '' "><![CDATA[ and T.buy_date >=#{param.mod_buyDate_st} ]]></if>  
	<if test="param.mod_buyDate_end !=null and param.mod_buyDate_end != '' "><![CDATA[ and T.buy_date <=#{param.mod_buyDate_end} ]]></if>
	
	<if test="param.mod_applyDate_st !=null and param.mod_applyDate_st != '' "><![CDATA[ and T.create_time_s >=#{param.mod_applyDate_st} ]]></if>  
	<if test="param.mod_applyDate_end !=null and param.mod_applyDate_end != '' "><![CDATA[ and T.create_time_s <=#{param.mod_applyDate_end} ]]></if>
	GROUP BY apply_id
  </select>
  <select id="selectDistanceApplyById" parameterType="java.lang.String" resultMap="BaseResultMap">
  	SELECT 
	T.apply_id, v6.org_name apply_unit, T.sequence, T.mileage, T.other_fee, T.customer_name, T.customer_phone, 
	T.customer_address, T.machine_type, v1.code_value gome_code, T.brand, T.machine_code, T.internal_machine_code1, 
	T.internal_machine_code2, T.external_machine_code, T.buy_date, T.install_man, T.install_date, 
	v3.code_value status, v4.code_value is_center_check_agree, T.center_check_comment, T.center_check_man, T.center_check_date, 
	v5.code_value is_headquarters_check_agree, T.headquarters_check_comment, T.headquarters_check_man, 
	T.headquarters_check_date, T.comment, v9.user_name create_man_s, v7.name create_organization_s , T.create_time_s, 
	v10.user_name alter_man_s, v8.name alter_organization_s, T.alter_time_s, T.process_instance_id, T.applicant, T.apply_date,T.service_unit,T.is_effective,
	T.create_position
	FROM hx_service_long_distance T
	LEFT JOIN v_code v1 ON v1.code_id='gmdm' AND T.gome_code=v1.code_key
	<!-- LEFT JOIN v_code v2 ON v2.code_id='pp' AND T.brand=v2.code_key -->
	LEFT JOIN v_code v3 ON v3.code_id='djzt' AND T.status=v3.code_key
	LEFT JOIN v_code v4 ON v4.code_id='sf' AND T.is_center_check_agree=v4.code_key
	LEFT JOIN v_code v5 ON v5.code_id='sf' AND T.is_headquarters_check_agree=v5.code_key
	LEFT JOIN (SELECT org_code,org_name FROM hx_organization WHERE org_type = '02' OR org_type = '03' 
	UNION SELECT CONCAT(CONCAT(azwd01,'_'),gsxx01) AS org_code,wdmc AS org_name FROM crm_website) v6 ON v6.org_code=T.apply_unit
	LEFT JOIN hx_user_unload v9 ON v9.user_login_name = T.create_man_s
	LEFT JOIN hx_user_unload v10 ON v10.user_login_name = T.alter_man_s
	LEFT JOIN v_organization v7 ON v7.id=T.create_organization_s
	LEFT JOIN v_organization v8 ON v8.id=T.alter_organization_s
	WHERE T.apply_id = #{applyId,jdbcType=VARCHAR}
    GROUP BY apply_id
  </select>
  
   <select id="selectDistanceApplyByIdNotConverte" parameterType="java.lang.String" resultMap="BaseResultMap">
  	SELECT *
	FROM hx_service_long_distance T
	WHERE T.apply_id = #{applyId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectDistanceApplyProById" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
	apply_id, apply_unit, sequence, mileage, other_fee, customer_name, customer_phone, 
    customer_address, machine_type, gome_code, brand, machine_code, internal_machine_code1, 
    internal_machine_code2, external_machine_code, buy_date, install_man, install_date, 
    status, is_center_check_agree, center_check_comment, center_check_man, center_check_date, 
    is_headquarters_check_agree, headquarters_check_comment, headquarters_check_man, 
    headquarters_check_date, comment, create_man_s, create_organization_s, create_time_s, 
    alter_man_s, alter_organization_s, alter_time_s, process_instance_id, applicant, apply_date,
    service_unit,is_effective,create_position
	FROM hx_service_long_distance
    WHERE apply_id = #{applyId,jdbcType=VARCHAR}
    GROUP BY apply_id
  </select>
  <insert id="insertLongDistanceApply" parameterType="com.gome.gmhx.entity.HxServiceLongDistance" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 05 15:17:54 CST 2014.
    -->
    insert into hx_service_long_distance (apply_id, apply_unit, sequence, 
      mileage, other_fee, customer_name, 
      customer_phone, customer_address, machine_type, 
      gome_code, brand, machine_code, 
      internal_machine_code1, internal_machine_code2, 
      external_machine_code, buy_date, install_man, 
      install_date, status, is_center_check_agree, 
      center_check_comment, center_check_man, center_check_date, 
      is_headquarters_check_agree, headquarters_check_comment, 
      headquarters_check_man, headquarters_check_date, 
      comment, create_man_s, create_organization_s, 
      create_time_s, alter_man_s, alter_organization_s, 
      alter_time_s, process_instance_id, applicant, 
      apply_date,service_unit,is_effective,create_position)
    values (#{applyId,jdbcType=VARCHAR}, #{applyUnit,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, 
      #{mileage,jdbcType=REAL}, #{otherFee,jdbcType=REAL}, #{customerName,jdbcType=VARCHAR}, 
      #{customerPhone,jdbcType=VARCHAR}, #{customerAddress,jdbcType=VARCHAR}, #{machineType,jdbcType=VARCHAR}, 
      #{gomeCode,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, #{machineCode,jdbcType=VARCHAR}, 
      #{internalMachineCode1,jdbcType=VARCHAR}, #{internalMachineCode2,jdbcType=VARCHAR}, 
      #{externalMachineCode,jdbcType=VARCHAR}, #{buyDate,jdbcType=TIMESTAMP}, #{installMan,jdbcType=VARCHAR}, 
      #{installDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{isCenterCheckAgree,jdbcType=VARCHAR}, 
      #{centerCheckComment,jdbcType=VARCHAR}, #{centerCheckMan,jdbcType=VARCHAR}, #{centerCheckDate,jdbcType=TIMESTAMP}, 
      #{isHeadquartersCheckAgree,jdbcType=VARCHAR}, #{headquartersCheckComment,jdbcType=VARCHAR}, 
      #{headquartersCheckMan,jdbcType=VARCHAR}, #{headquartersCheckDate,jdbcType=TIMESTAMP}, 
      #{comment,jdbcType=VARCHAR}, #{createManS,jdbcType=VARCHAR}, #{createOrganizationS,jdbcType=VARCHAR}, 
      #{createTimeS,jdbcType=TIMESTAMP}, #{alterManS,jdbcType=VARCHAR}, #{alterOrganizationS,jdbcType=VARCHAR}, 
      #{alterTimeS,jdbcType=TIMESTAMP}, #{processInstanceId,jdbcType=VARCHAR}, #{applicant,jdbcType=VARCHAR}, 
      #{applyDate,jdbcType=TIMESTAMP},#{serviceUnit,jdbcType=VARCHAR},#{isEffective,jdbcType=BIT},#{createPosition,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gome.gmhx.entity.HxServiceLongDistance" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 05 15:17:54 CST 2014.
    -->
    insert into hx_service_long_distance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="applyId != null" >
        apply_id,
      </if>
      <if test="applyUnit != null" >
        apply_unit,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="mileage != null" >
        mileage,
      </if>
      <if test="otherFee != null" >
        other_fee,
      </if>
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="customerPhone != null" >
        customer_phone,
      </if>
      <if test="customerAddress != null" >
        customer_address,
      </if>
      <if test="machineType != null" >
        machine_type,
      </if>
      <if test="gomeCode != null" >
        gome_code,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="machineCode != null" >
        machine_code,
      </if>
      <if test="internalMachineCode1 != null" >
        internal_machine_code1,
      </if>
      <if test="internalMachineCode2 != null" >
        internal_machine_code2,
      </if>
      <if test="externalMachineCode != null" >
        external_machine_code,
      </if>
      <if test="buyDate != null" >
        buy_date,
      </if>
      <if test="installMan != null" >
        install_man,
      </if>
      <if test="installDate != null" >
        install_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isCenterCheckAgree != null" >
        is_center_check_agree,
      </if>
      <if test="centerCheckComment != null" >
        center_check_comment,
      </if>
      <if test="centerCheckMan != null" >
        center_check_man,
      </if>
      <if test="centerCheckDate != null" >
        center_check_date,
      </if>
      <if test="isHeadquartersCheckAgree != null" >
        is_headquarters_check_agree,
      </if>
      <if test="headquartersCheckComment != null" >
        headquarters_check_comment,
      </if>
      <if test="headquartersCheckMan != null" >
        headquarters_check_man,
      </if>
      <if test="headquartersCheckDate != null" >
        headquarters_check_date,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createManS != null" >
        create_man_s,
      </if>
      <if test="createOrganizationS != null" >
        create_organization_s,
      </if>
      <if test="createTimeS != null" >
        create_time_s,
      </if>
      <if test="alterManS != null" >
        alter_man_s,
      </if>
      <if test="alterOrganizationS != null" >
        alter_organization_s,
      </if>
      <if test="alterTimeS != null" >
        alter_time_s,
      </if>
      <if test="processInstanceId != null" >
        process_instance_id,
      </if>
      <if test="applicant != null" >
        applicant,
      </if>
      <if test="applyDate != null" >
        apply_date,
      </if>
      <if test="serviceUnit != null" >
        service_unit,
      </if>
      <if test="isEffective != null" >
        is_effective,
      </if>
      <if test="createPosition != null" >
        create_position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="applyId != null" >
        #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="applyUnit != null" >
        #{applyUnit,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="mileage != null" >
        #{mileage,jdbcType=REAL},
      </if>
      <if test="otherFee != null" >
        #{otherFee,jdbcType=REAL},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null" >
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerAddress != null" >
        #{customerAddress,jdbcType=VARCHAR},
      </if>
      <if test="machineType != null" >
        #{machineType,jdbcType=VARCHAR},
      </if>
      <if test="gomeCode != null" >
        #{gomeCode,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="machineCode != null" >
        #{machineCode,jdbcType=VARCHAR},
      </if>
      <if test="internalMachineCode1 != null" >
        #{internalMachineCode1,jdbcType=VARCHAR},
      </if>
      <if test="internalMachineCode2 != null" >
        #{internalMachineCode2,jdbcType=VARCHAR},
      </if>
      <if test="externalMachineCode != null" >
        #{externalMachineCode,jdbcType=VARCHAR},
      </if>
      <if test="buyDate != null" >
        #{buyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="installMan != null" >
        #{installMan,jdbcType=VARCHAR},
      </if>
      <if test="installDate != null" >
        #{installDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="isCenterCheckAgree != null" >
        #{isCenterCheckAgree,jdbcType=VARCHAR},
      </if>
      <if test="centerCheckComment != null" >
        #{centerCheckComment,jdbcType=VARCHAR},
      </if>
      <if test="centerCheckMan != null" >
        #{centerCheckMan,jdbcType=VARCHAR},
      </if>
      <if test="centerCheckDate != null" >
        #{centerCheckDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isHeadquartersCheckAgree != null" >
        #{isHeadquartersCheckAgree,jdbcType=VARCHAR},
      </if>
      <if test="headquartersCheckComment != null" >
        #{headquartersCheckComment,jdbcType=VARCHAR},
      </if>
      <if test="headquartersCheckMan != null" >
        #{headquartersCheckMan,jdbcType=VARCHAR},
      </if>
      <if test="headquartersCheckDate != null" >
        #{headquartersCheckDate,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createManS != null" >
        #{createManS,jdbcType=VARCHAR},
      </if>
      <if test="createOrganizationS != null" >
        #{createOrganizationS,jdbcType=VARCHAR},
      </if>
      <if test="createTimeS != null" >
        #{createTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="alterManS != null" >
        #{alterManS,jdbcType=VARCHAR},
      </if>
      <if test="alterOrganizationS != null" >
        #{alterOrganizationS,jdbcType=VARCHAR},
      </if>
      <if test="alterTimeS != null" >
        #{alterTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="processInstanceId != null" >
        #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null" >
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceUnit != null" >
        #{service_unit,jdbcType=VARCHAR},
      </if>
      <if test="isEffective != null" >
        #{is_effective,jdbcType=BIT},
      </if>
      <if test="createPosition != null" >
        #{create_position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateDistanceApplyEffective" parameterType="java.lang.String">
  	update hx_service_long_distance 
  	set is_effective = '1'
  	where apply_id = #{applyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 05 15:17:54 CST 2014.
    -->
    update hx_service_long_distance
    <set >
      <if test="record.applyId != null" >
        apply_id = #{record.applyId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyUnit != null" >
        apply_unit = #{record.applyUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.mileage != null" >
        mileage = #{record.mileage,jdbcType=REAL},
      </if>
      <if test="record.otherFee != null" >
        other_fee = #{record.otherFee,jdbcType=REAL},
      </if>
      <if test="record.customerName != null" >
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPhone != null" >
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAddress != null" >
        customer_address = #{record.customerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.machineType != null" >
        machine_type = #{record.machineType,jdbcType=VARCHAR},
      </if>
      <if test="record.gomeCode != null" >
        gome_code = #{record.gomeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null" >
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.machineCode != null" >
        machine_code = #{record.machineCode,jdbcType=VARCHAR},
      </if>
      <if test="record.internalMachineCode1 != null" >
        internal_machine_code1 = #{record.internalMachineCode1,jdbcType=VARCHAR},
      </if>
      <if test="record.internalMachineCode2 != null" >
        internal_machine_code2 = #{record.internalMachineCode2,jdbcType=VARCHAR},
      </if>
      <if test="record.externalMachineCode != null" >
        external_machine_code = #{record.externalMachineCode,jdbcType=VARCHAR},
      </if>
      <if test="record.buyDate != null" >
        buy_date = #{record.buyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.installMan != null" >
        install_man = #{record.installMan,jdbcType=VARCHAR},
      </if>
      <if test="record.installDate != null" >
        install_date = #{record.installDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.isCenterCheckAgree != null" >
        is_center_check_agree = #{record.isCenterCheckAgree,jdbcType=VARCHAR},
      </if>
      <if test="record.centerCheckComment != null" >
        center_check_comment = #{record.centerCheckComment,jdbcType=VARCHAR},
      </if>
      <if test="record.centerCheckMan != null" >
        center_check_man = #{record.centerCheckMan,jdbcType=VARCHAR},
      </if>
      <if test="record.centerCheckDate != null" >
        center_check_date = #{record.centerCheckDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isHeadquartersCheckAgree != null" >
        is_headquarters_check_agree = #{record.isHeadquartersCheckAgree,jdbcType=VARCHAR},
      </if>
      <if test="record.headquartersCheckComment != null" >
        headquarters_check_comment = #{record.headquartersCheckComment,jdbcType=VARCHAR},
      </if>
      <if test="record.headquartersCheckMan != null" >
        headquarters_check_man = #{record.headquartersCheckMan,jdbcType=VARCHAR},
      </if>
      <if test="record.headquartersCheckDate != null" >
        headquarters_check_date = #{record.headquartersCheckDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.createManS != null" >
        create_man_s = #{record.createManS,jdbcType=VARCHAR},
      </if>
      <if test="record.createOrganizationS != null" >
        create_organization_s = #{record.createOrganizationS,jdbcType=VARCHAR},
      </if>
      <if test="record.createTimeS != null" >
        create_time_s = #{record.createTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="record.alterManS != null" >
        alter_man_s = #{record.alterManS,jdbcType=VARCHAR},
      </if>
      <if test="record.alterOrganizationS != null" >
        alter_organization_s = #{record.alterOrganizationS,jdbcType=VARCHAR},
      </if>
      <if test="record.alterTimeS != null" >
        alter_time_s = #{record.alterTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="record.processInstanceId != null" >
        process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.applicant != null" >
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.applyDate != null" >
        apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceUnit != null" >
        service_unit = #{record.serviceUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.isEffective != null" >
        is_effective = #{record.isEffective,jdbcType=BIT},
      </if>
      <if test="record.createPosition != null" >
        create_position = #{record.createPosition,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateLongDistanceApply" parameterType="com.gome.gmhx.entity.HxServiceLongDistance">
  	update hx_service_long_distance
  	<set>
		<if test="applyUnit != null" >
		  apply_unit = #{applyUnit,jdbcType=VARCHAR},
		</if>
		<if test="sequence != null" >
		  sequence = #{sequence,jdbcType=INTEGER},
		</if>
		<if test="mileage != null" >
		  mileage = #{mileage,jdbcType=REAL},
		</if>
		<if test="otherFee != null" >
		  other_fee = #{otherFee,jdbcType=REAL},
		</if>
		<if test="customerName != null" >
		  customer_name = #{customerName,jdbcType=VARCHAR},
		</if>
		<if test="customerPhone != null" >
		  customer_phone = #{customerPhone,jdbcType=VARCHAR},
		</if>
		<if test="customerAddress != null" >
		  customer_address = #{customerAddress,jdbcType=VARCHAR},
		</if>
		<if test="machineType != null" >
		  machine_type = #{machineType,jdbcType=VARCHAR},
		</if>
		<if test="gomeCode != null" >
		  gome_code = #{gomeCode,jdbcType=VARCHAR},
		</if>
		<if test="brand != null" >
		  brand = #{brand,jdbcType=VARCHAR},
		</if>
		<if test="machineCode != null" >
		  machine_code = #{machineCode,jdbcType=VARCHAR},
		</if>
		<if test="internalMachineCode1 != null" >
		  internal_machine_code1 = #{internalMachineCode1,jdbcType=VARCHAR},
		</if>
		<if test="internalMachineCode2 != null" >
		  internal_machine_code2 = #{internalMachineCode2,jdbcType=VARCHAR},
		</if>
		<if test="externalMachineCode != null" >
		  external_machine_code = #{externalMachineCode,jdbcType=VARCHAR},
		</if>
		<if test="buyDate != null" >
		  buy_date = #{buyDate,jdbcType=TIMESTAMP},
		</if>
		<if test="installMan != null" >
		  install_man = #{installMan,jdbcType=VARCHAR},
		</if>
		<if test="installDate != null" >
		  install_date = #{installDate,jdbcType=TIMESTAMP},
		</if>
		<if test="status != null" >
		  status = #{status,jdbcType=VARCHAR},
		</if>
		<if test="isCenterCheckAgree != null" >
		  is_center_check_agree = #{isCenterCheckAgree,jdbcType=VARCHAR},
		</if>
		<if test="centerCheckComment != null" >
		  center_check_comment = #{centerCheckComment,jdbcType=VARCHAR},
		</if>
		<if test="centerCheckMan != null" >
		  center_check_man = #{centerCheckMan,jdbcType=VARCHAR},
		</if>
		<if test="centerCheckDate != null" >
		  center_check_date = #{centerCheckDate,jdbcType=TIMESTAMP},
		</if>
		<if test="isHeadquartersCheckAgree != null" >
		  is_headquarters_check_agree = #{isHeadquartersCheckAgree,jdbcType=VARCHAR},
		</if>
		<if test="headquartersCheckComment != null" >
		  headquarters_check_comment = #{headquartersCheckComment,jdbcType=VARCHAR},
		</if>
		<if test="headquartersCheckMan != null" >
		  headquarters_check_man = #{headquartersCheckMan,jdbcType=VARCHAR},
		</if>
		<if test="headquartersCheckDate != null" >
		  headquarters_check_date = #{headquartersCheckDate,jdbcType=TIMESTAMP},
		</if>
		<if test="comment != null" >
		  comment = #{comment,jdbcType=VARCHAR},
		</if>
		<if test="createManS != null" >
		  create_man_s = #{createManS,jdbcType=VARCHAR},
		</if>
		<if test="createOrganizationS != null" >
		  create_organization_s = #{createOrganizationS,jdbcType=VARCHAR},
		</if>
		<if test="createTimeS != null" >
		  create_time_s = #{createTimeS,jdbcType=TIMESTAMP},
		</if>
		<if test="alterManS != null" >
		  alter_man_s = #{alterManS,jdbcType=VARCHAR},
		</if>
		<if test="alterOrganizationS != null" >
		  alter_organization_s = #{alterOrganizationS,jdbcType=VARCHAR},
		</if>
		<if test="alterTimeS != null" >
		  alter_time_s = #{alterTimeS,jdbcType=TIMESTAMP},
		</if>
		<if test="processInstanceId != null" >
		  process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
		</if>
		<if test="applicant != null" >
		  applicant = #{applicant,jdbcType=VARCHAR},
		</if>
		<if test="applyDate != null" >
		  apply_date = #{applyDate,jdbcType=TIMESTAMP},
		</if>
		<if test="serviceUnit != null" >
		  service_unit = #{serviceUnit,jdbcType=VARCHAR},
		</if>
		<if test="isEffective != null" >
		  is_effective = #{isEffective,jdbcType=BIT},
		</if>
		<if test="createPosition != null" >
		  create_position = #{createPosition,jdbcType=VARCHAR},
		</if>
	</set>
	where apply_id = #{applyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 05 15:17:54 CST 2014.
    -->
    update hx_service_long_distance
    set apply_id = #{record.applyId,jdbcType=VARCHAR},
      apply_unit = #{record.applyUnit,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=INTEGER},
      mileage = #{record.mileage,jdbcType=REAL},
      other_fee = #{record.otherFee,jdbcType=REAL},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      customer_address = #{record.customerAddress,jdbcType=VARCHAR},
      machine_type = #{record.machineType,jdbcType=VARCHAR},
      gome_code = #{record.gomeCode,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      machine_code = #{record.machineCode,jdbcType=VARCHAR},
      internal_machine_code1 = #{record.internalMachineCode1,jdbcType=VARCHAR},
      internal_machine_code2 = #{record.internalMachineCode2,jdbcType=VARCHAR},
      external_machine_code = #{record.externalMachineCode,jdbcType=VARCHAR},
      buy_date = #{record.buyDate,jdbcType=TIMESTAMP},
      install_man = #{record.installMan,jdbcType=VARCHAR},
      install_date = #{record.installDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      is_center_check_agree = #{record.isCenterCheckAgree,jdbcType=VARCHAR},
      center_check_comment = #{record.centerCheckComment,jdbcType=VARCHAR},
      center_check_man = #{record.centerCheckMan,jdbcType=VARCHAR},
      center_check_date = #{record.centerCheckDate,jdbcType=TIMESTAMP},
      is_headquarters_check_agree = #{record.isHeadquartersCheckAgree,jdbcType=VARCHAR},
      headquarters_check_comment = #{record.headquartersCheckComment,jdbcType=VARCHAR},
      headquarters_check_man = #{record.headquartersCheckMan,jdbcType=VARCHAR},
      headquarters_check_date = #{record.headquartersCheckDate,jdbcType=TIMESTAMP},
      comment = #{record.comment,jdbcType=VARCHAR},
      create_man_s = #{record.createManS,jdbcType=VARCHAR},
      create_organization_s = #{record.createOrganizationS,jdbcType=VARCHAR},
      create_time_s = #{record.createTimeS,jdbcType=TIMESTAMP},
      alter_man_s = #{record.alterManS,jdbcType=VARCHAR},
      alter_organization_s = #{record.alterOrganizationS,jdbcType=VARCHAR},
      alter_time_s = #{record.alterTimeS,jdbcType=TIMESTAMP},
      process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      service_unit = #{record.serviceUnit,jdbcType=VARCHAR},
      is_effective = #{record.isEffective,jdbcType=BIT},
      create_position = #{record.createPosition,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <delete id="deleteDistanceApply" parameterType="java.lang.String">
  	delete from hx_service_long_distance
  	where apply_id = #{applyId,jdbcType=VARCHAR}
  </delete>
  <sql id="MySqlDialectPage" >
    <if test="page != null" >
      <![CDATA[ limit  #{page.begin} , #{page.end} ]]>
    </if>
  </sql>
</mapper>