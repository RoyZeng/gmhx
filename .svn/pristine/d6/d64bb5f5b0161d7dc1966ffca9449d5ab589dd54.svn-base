<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:aop="http://www.springframework.org/schema/aop"       xmlns:tx="http://www.springframework.org/schema/tx"       xmlns:context="http://www.springframework.org/schema/context"       xsi:schemaLocation="       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd       ">    <!-- 扫描注解Bean -->    <context:component-scan base-package="com.gome">        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>    </context:component-scan>    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">        <property name="locations">            <list>                <value>classpath:/common.properties</value>            </list>        </property>    </bean>        <import resource="classpath*:/spring/spring-service.xml" /> 	<import resource="classpath*:/spring/schedule.xml" /> 	<import resource="classpath*:/spring/spring-jbpm.xml" />  	<!-- 配置c3p0数据源 -->	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">		<property name="driverClass" value="${jdbc.driverClass}" />		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />		<property name="user" value="${jdbc.user}" />		<property name="password" value="${jdbc.password}" />				<property name="minPoolSize"><value>1</value></property>		<property name="maxPoolSize"><value>10</value></property>		<property name="maxIdleTime"><value>1800</value></property>		<property name="acquireIncrement"><value>2</value></property>		<property name="maxStatements"><value>0</value></property>		<property name="initialPoolSize"><value>2</value></property>		<property name="idleConnectionTestPeriod"><value>1800</value></property>		<property name="acquireRetryAttempts"><value>120</value></property>		<property name="breakAfterAcquireFailure"><value>true</value></property>	</bean>  	<!-- 配置mybatisSqlSessionFactoryBean -->	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">		<property name="mapperLocations" value="classpath:mapper/*.xml" />		<property name="typeAliasesPackage" value="com.gome.gmhx.entity" />		<property name="dataSource" ref="dataSource" />		<property name="configLocation" value="classpath:mybatis.xml"></property>	</bean>		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">		<property name="basePackage" value="com.gome.gmhx.dao"></property>		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>	</bean>		<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">      	<constructor-arg index="0" ref="sqlSessionFactory"/>      </bean>              <!-- 读取恒信售后（旧）sqlserver数据库配置 -->	<bean id="dataSourceHistory" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">		<property name="driverClass" value="${sqlserver_driverName}" />		<property name="jdbcUrl" value="${sqlserver_url}" />		<property name="user" value="${sqlserver_username}" />		<property name="password" value="${sqlserver_passsword}" />				<property name="minPoolSize"><value>1</value></property>		<property name="maxPoolSize"><value>10</value></property>		<property name="maxIdleTime"><value>1800</value></property>		<property name="acquireIncrement"><value>2</value></property>		<property name="maxStatements"><value>0</value></property>		<property name="initialPoolSize"><value>2</value></property>		<property name="idleConnectionTestPeriod"><value>1800</value></property>		<property name="acquireRetryAttempts"><value>120</value></property>		<property name="breakAfterAcquireFailure"><value>true</value></property>	</bean>	<bean id="sqlSessionFactoryHistory" class="org.mybatis.spring.SqlSessionFactoryBean">		<property name="mapperLocations" value="classpath:mapper/*.xml" />		<property name="typeAliasesPackage" value="com.gome.gmhx.entity" />		<property name="dataSource" ref="dataSourceHistory" />		<property name="configLocation" value="classpath:mybatis.xml"></property>	</bean>		<bean id="sqlSessionTemplateHistory" class="org.mybatis.spring.SqlSessionTemplate">      	<constructor-arg index="0" ref="sqlSessionFactoryHistory"/>      </bean>          <!-- 开启AOP监听 只对当前配置文件有效 -->	<aop:aspectj-autoproxy expose-proxy="true"/>		<!-- 开启注解事务 只对当前配置文件有效 -->  	<tx:annotation-driven transaction-manager="txManager"/>	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">		<property name="sessionFactory" ref="sessionFactory" />		<property name="dataSource" ref="dataSource"></property>	</bean>    <tx:advice id="txAdvice" transaction-manager="txManager">        <tx:attributes>            <tx:method name="save*" propagation="REQUIRED" />            <tx:method name="add*" propagation="REQUIRED" />            <tx:method name="create*" propagation="REQUIRED" />            <tx:method name="insert*" propagation="REQUIRED" />            <tx:method name="update*" propagation="REQUIRED" />            <tx:method name="merge*" propagation="REQUIRED" />            <tx:method name="del*" propagation="REQUIRED" />            <tx:method name="remove*" propagation="REQUIRED" />            <tx:method name="put*" propagation="REQUIRED" />            <tx:method name="use*" propagation="REQUIRED"/>            <tx:method name="handle*" propagation="REQUIRED"/>            <tx:method name="import" propagation="REQUIRED"/>                        <tx:method name="get*" propagation="REQUIRED" read-only="true" />            <tx:method name="count*" propagation="REQUIRED" read-only="true" />            <tx:method name="find*" propagation="REQUIRED" read-only="true" />            <tx:method name="list*" propagation="REQUIRED" read-only="true" />            <tx:method name="*" />        </tx:attributes>    </tx:advice>    <aop:config expose-proxy="true">        <!-- 只对业务逻辑层实施事务 -->        <aop:pointcut id="txPointcut" expression="execution(* com.gome..service..*.*(..))" />        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>    </aop:config>	 <!-- 自动验证WebService服务 -->        <bean id="webServiceInteceptor" class="com.gome.gmhx.webservice.interceptor.WSMethodAuthenticationInteceptor"></bean>        <aop:config>        <aop:pointcut expression="execution (* com.gome.gmhx.webservice.*.*.*(..))" id="webService"></aop:pointcut>        <aop:advisor advice-ref="webServiceInteceptor" pointcut-ref="webService"/>    </aop:config>        <bean id="maintenanceCodeAdvice" class="com.gome.common.bean.MaintenanceCodeAdvice" />	<aop:config proxy-target-class="true">		<aop:pointcut id="maintenanceCodePoint" expression="@annotation(com.gome.common.annotation.MaintenanceCode)" />		<aop:advisor pointcut-ref="maintenanceCodePoint" advice-ref="maintenanceCodeAdvice" />	</aop:config></beans>