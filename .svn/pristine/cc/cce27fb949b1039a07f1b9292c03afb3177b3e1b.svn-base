<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gome.gmhx.dao.servicemanage.HxServiceTicketDao">
	<resultMap id="BaseResultMap" type="com.gome.gmhx.entity.HxServiceTicket">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Sep 15 
			09:44:00 CST 2014. -->
		<id column="service_id" property="serviceId" jdbcType="VARCHAR" />
		<result column="jl_service_id" property="jlServiceId" jdbcType="VARCHAR" />
		<result column="customer_id" property="customerId" jdbcType="VARCHAR" />
		<result column="product_id" property="productId" jdbcType="VARCHAR" />
		<result column="sequence" property="sequence" jdbcType="INTEGER" />
		<result column="category" property="category" jdbcType="VARCHAR" />
		<result column="data_from" property="dataFrom" jdbcType="REAL" />
		<result column="service_type" property="serviceType" jdbcType="VARCHAR" />
		<result column="link_man" property="linkMan" jdbcType="VARCHAR" />
		<result column="link_phone" property="linkPhone" jdbcType="VARCHAR" />
		<result column="appointment_date" property="appointmentDate"
			jdbcType="TIMESTAMP" />
		<result column="appointment_quantum" property="appointmentQuantum"
			jdbcType="VARCHAR" />
		<result column="urgency_degree" property="urgencyDegree"
			jdbcType="VARCHAR" />
		<result column="dispatch_info" property="dispatchInfo"
			jdbcType="VARCHAR" />
		<result column="customer_describe" property="customerDescribe"
			jdbcType="VARCHAR" />
		<result column="inform_repair_date" property="informRepairDate"
			jdbcType="TIMESTAMP" />
		<result column="repair_mode" property="repairMode" jdbcType="VARCHAR" />
		<result column="move_mode" property="moveMode" jdbcType="VARCHAR" />
		<result column="charge_fluorine_num" property="chargeFluorineNum"
			jdbcType="VARCHAR" />
		<result column="distance_apply_num" property="distanceApplyNum"
			jdbcType="VARCHAR" />
		<result column="service_pattern" property="servicePattern"
			jdbcType="VARCHAR" />
		<result column="service_card_num" property="serviceCardNum"
			jdbcType="VARCHAR" />
		<result column="service_man" property="serviceMan" jdbcType="VARCHAR" />
		<result column="service_date" property="serviceDate" jdbcType="TIMESTAMP" />
		<result column="traffic_fee" property="trafficFee" jdbcType="REAL" />
		<result column="delay_fee" property="delayFee" jdbcType="REAL" />
		<result column="other_fee" property="otherFee" jdbcType="REAL" />
		<result column="product_exterior_satisfaction" property="productExteriorSatisfaction"
			jdbcType="VARCHAR" />
		<result column="product_exterior_significance" property="productExteriorSignificance"
			jdbcType="VARCHAR" />
		<result column="price_satisfaction" property="priceSatisfaction"
			jdbcType="VARCHAR" />
		<result column="price_significance" property="priceSignificance"
			jdbcType="VARCHAR" />
		<result column="service_satisfaction" property="serviceSatisfaction"
			jdbcType="VARCHAR" />
		<result column="service_significance" property="serviceSignificance"
			jdbcType="VARCHAR" />
		<result column="quality_satisfaction" property="qualitySatisfaction"
			jdbcType="VARCHAR" />
		<result column="quality_significance" property="qualitySignificance"
			jdbcType="VARCHAR" />
		<result column="physiology_satisfaction" property="physiologySatisfaction"
			jdbcType="VARCHAR" />
		<result column="physiology_significance" property="physiologySignificance"
			jdbcType="VARCHAR" />
		<result column="customer_satisfaction" property="customerSatisfaction"
			jdbcType="VARCHAR" />
		<result column="warranty_policy" property="warrantyPolicy"
			jdbcType="VARCHAR" />
		<result column="is_replace_parts" property="isReplaceParts"
			jdbcType="BIT" />
		<result column="manul_num" property="manulNum" jdbcType="VARCHAR" />
		<result column="is_double_install" property="isDoubleInstall"
			jdbcType="BIT" />
		<result column="input_time" property="inputTime" jdbcType="TIMESTAMP" />
		<result column="appointment_install_date" property="appointmentInstallDate"
			jdbcType="TIMESTAMP" />
		<result column="move_address" property="moveAddress" jdbcType="VARCHAR" />
		<result column="machine_check_fault_reason" property="machineCheckFaultReason"
			jdbcType="VARCHAR" />
		<result column="center_check_traffic_fee" property="centerCheckTrafficFee"
			jdbcType="REAL" />
		<result column="center_check_delay_fee" property="centerCheckDelayFee"
			jdbcType="REAL" />
		<result column="center_check_other_fee" property="centerCheckOtherFee"
			jdbcType="REAL" />
		<result column="center_check_man" property="centerCheckMan"
			jdbcType="VARCHAR" />
		<result column="center_check_time" property="centerCheckTime"
			jdbcType="TIMESTAMP" />
		<result column="center_check_result" property="centerCheckResult"
			jdbcType="VARCHAR" />
		<result column="center_check_comment" property="centerCheckComment"
			jdbcType="VARCHAR" />
		<result column="headquarters_check_traffic_fee" property="headquartersCheckTrafficFee"
			jdbcType="REAL" />
		<result column="headquarters_check_delay_fee" property="headquartersCheckDelayFee"
			jdbcType="REAL" />
		<result column="headquarters_check_other_fee" property="headquartersCheckOtherFee"
			jdbcType="REAL" />
		<result column="headquarters_check_man" property="headquartersCheckMan"
			jdbcType="VARCHAR" />
		<result column="headquarters_check_time" property="headquartersCheckTime"
			jdbcType="TIMESTAMP" />
		<result column="headquarters_check_result" property="headquartersCheckResult"
			jdbcType="VARCHAR" />
		<result column="headquarters_check_comment" property="headquartersCheckComment"
			jdbcType="VARCHAR" />
		<result column="check_result" property="checkResult" jdbcType="VARCHAR" />
		<result column="recall_man" property="recallMan" jdbcType="VARCHAR" />
		<result column="recall_result" property="recallResult"
			jdbcType="VARCHAR" />
		<result column="recall_time" property="recallTime" jdbcType="TIMESTAMP" />
		<result column="is_clear" property="isClear" jdbcType="BIT" />
		<result column="service_status" property="serviceStatus"
			jdbcType="VARCHAR" />
		<result column="center" property="center" jdbcType="VARCHAR" />
		<result column="website" property="website" jdbcType="VARCHAR" />
		<result column="comment_s" property="commentS" jdbcType="VARCHAR" />
		<result column="create_man_s" property="createManS" jdbcType="VARCHAR" />
		<result column="create_organization_s" property="createOrganizationS"
			jdbcType="VARCHAR" />
		<result column="create_time_s" property="createTimeS" jdbcType="TIMESTAMP" />
		<result column="alter_man_s" property="alterManS" jdbcType="VARCHAR" />
		<result column="alter_organization_s" property="alterOrganizationS"
			jdbcType="VARCHAR" />
		<result column="alter_time_s" property="alterTimeS" jdbcType="TIMESTAMP" />
		<result column="process_instance_id" property="processInstanceId"
			jdbcType="VARCHAR" />
		<result column="applicant" property="applicant" jdbcType="VARCHAR" />
		<result column="apply_date" property="applyDate" jdbcType="TIMESTAMP" />
		<result column="service_unit" property="serviceUnit" jdbcType="VARCHAR" />
		<result column="create_position" property="createPosition"
			jdbcType="VARCHAR" />
		<result column="is_pass_check" property="isPassCheck" jdbcType="BIT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		service_id,jl_service_id , customer_id, product_id, sequence, category, data_from,
		service_type, link_man,
		link_phone, appointment_date, appointment_quantum, urgency_degree, dispatch_info,
		customer_describe, inform_repair_date, repair_mode, move_mode,
		charge_fluorine_num,
		distance_apply_num, service_pattern, service_card_num, service_man, service_date,
		traffic_fee, delay_fee, other_fee, product_exterior_satisfaction,
		product_exterior_significance,
		price_satisfaction, price_significance, service_satisfaction, service_significance,
		quality_satisfaction, quality_significance, physiology_satisfaction,
		physiology_significance,
		customer_satisfaction, warranty_policy, is_replace_parts, manul_num, is_double_install,
		input_time, appointment_install_date, move_address,
		machine_check_fault_reason, center_check_traffic_fee,
		center_check_delay_fee, center_check_other_fee, center_check_man,
		center_check_time,
		center_check_result, center_check_comment, headquarters_check_traffic_fee,
		headquarters_check_delay_fee,
		headquarters_check_other_fee, headquarters_check_man, headquarters_check_time,
		headquarters_check_result,
		headquarters_check_comment, check_result, recall_man, recall_result, recall_time,
		is_clear, service_status, center, website, comment_s, create_man_s,
		create_organization_s,
		create_time_s, alter_man_s, alter_organization_s, alter_time_s, process_instance_id,
		applicant, apply_date,service_unit,create_position,is_pass_check
	</sql>
	<select id="getExistWD" resultType="hashmap" parameterType="java.util.Date">
		SELECT TM.serviceUnit,TM.createTime,EXTRACT(YEAR_MONTH FROM
		TM.createTime) ym,O.org_name unitName FROM
		(SELECT create_organization_s serviceUnit,create_time_s createTime FROM
		hx_service_ticket T
		WHERE T.create_time_s!=''
		AND T.service_unit!=''
		AND EXTRACT(YEAR_MONTH FROM T.create_time_s)=EXTRACT(YEAR_MONTH FROM
		#{time,jdbcType=TIMESTAMP})
		UNION
		SELECT send_company serviceUnit,create_time createTime FROM
		hx_material_manage M
		WHERE M.create_time!=''
		AND M.send_company!=''
		AND EXTRACT(YEAR_MONTH FROM M.create_time)=EXTRACT(YEAR_MONTH FROM
		#{time,jdbcType=TIMESTAMP})
		GROUP BY serviceUnit) TM
		LEFT JOIN
		(SELECT org_code,org_name FROM hx_organization WHERE org_type = '02' OR
		org_type = '03'
		UNION
		SELECT CONCAT(CONCAT(azwd01,'_'),gsxx01) AS org_code,wdmc AS org_name FROM
		crm_website) O ON O.org_code = TM.serviceUnit
		WHERE TM.serviceUnit != ''
		GROUP BY TM.serviceUnit
	</select>
	<select id="getMaxSequence" resultType="Integer">
		SELECT MAX(sequence) FROM hx_service_ticket WHERE
		STR_TO_DATE(create_time_s,'%Y-%m-%d')=CURDATE()
	</select>
	<select id="getHxMaintenanceTree" resultType="hashmap">
		SELECT classify_code fault_code,classify_name fault_name,parent_code,0
		chose FROM hx_product_classify WHERE parent_code = 'C3001'
		UNION
		SELECT fault_code,fault_name,category parent_code,chose FROM
		hx_fault_maintenance_code
		WHERE category IN (SELECT classify_code FROM hx_product_classify WHERE
		parent_code = 'C3001')

		<!-- SELECT t.classify_name, t.classify_code , t.maintenance_costs , t.arrange_number, 
			t.fault_name,t.wet_union,t.p_number, t.parent_code,t.mod_date,t.parent_classify,t.wet_enable,t.fault_code,t.note,t.modifier, 
			v1.code_value category, t.category categoryId, v2.code_value chose ,t.chose 
			choseId,v3.code_value validity ,t.validity validityId FROM hx_fault_maintenance_code 
			t LEFT JOIN v_code v1 ON v1.code_id='wxpl' AND v1.code_key=t.category LEFT 
			JOIN v_code v2 ON v2.code_id='sf' AND v2.code_key=t.chose LEFT JOIN v_code 
			v3 ON v3.code_id='sf' AND v3.code_key=t.validity WHERE 1=1 <if test="_parameter 
			!=null and _parameter!='' "> and t.category = #{_parameter,jdbcType=VARCHAR} 
			</if> -->
	</select>
	<select id="selectHxProductDetailById" parameterType="java.lang.String"
		resultType="hashmap">
		SELECT model machine_type,t.product_code ,v4.code_value gome_code, v5.code_value brand
		FROM hx_product_detail t
		LEFT JOIN v_code v1 ON t.classify_code=v1.code_key AND v1.code_id='cpfl'
		LEFT JOIN v_code v2 ON t.model_classify=v2.code_key AND v2.code_id='jxlb'
		LEFT JOIN v_code v3 ON t.product_model=v3.code_key AND v3.code_id='cplx'
		LEFT JOIN v_code v4 ON t.gome_code=v4.code_key AND v4.code_id='gmdm'
	    LEFT JOIN v_code v5 on t.brand=v5.code_key and v5.code_id='pp'
		WHERE t.product_code = #{spbm,jdbcType=VARCHAR}
	</select>
	<select id="selectServiceTicketByPrimaryKey" resultType="hashmap"
		parameterType="java.lang.String">
		select
		T.service_id, T.jl_service_id, T.sequence, T.service_type, T1.category,T1.mode,
		T.data_from, T.link_man, T.link_phone,
		T.appointment_date, T.appointment_quantum, T.urgency_degree, T.dispatch_info,
		T.customer_describe,
		T.inform_repair_date, T.repair_mode, T.move_mode, T.charge_fluorine_num,
		T.distance_apply_num,
		T.service_pattern, T.service_card_num, T.service_man, T.service_date, T.traffic_fee,
		T.delay_fee,
		T.other_fee, T.product_exterior_satisfaction, T.product_exterior_significance,
		T.price_satisfaction,
		T.price_significance, T.service_satisfaction, T.service_significance,
		T.quality_satisfaction,
		T.quality_significance, T.physiology_satisfaction, T.physiology_significance,
		T.customer_satisfaction,
		T.warranty_policy, T.is_replace_parts, T.manul_num, T.is_double_install, T.input_time,
		T.appointment_install_date,
		T.move_address, T.machine_check_fault_reason, T.center_check_traffic_fee,
		T.center_check_delay_fee,
		T.center_check_other_fee, T.center_check_man, T.center_check_time, T.center_check_comment,
		T.headquarters_check_traffic_fee, T.headquarters_check_delay_fee,
		T.headquarters_check_other_fee,
		T.headquarters_check_man, T.headquarters_check_time, T.headquarters_check_comment,
		T.check_result,
		T.recall_man, T.recall_result, T.recall_time, T.is_clear, T.service_status,
		T.center, T.website,
		T.comment_s, T.create_man_s, (SELECT NAME FROM hx_organization_unload WHERE id =
		T.create_organization_s limit 1) create_organization_s,
		T.create_time_s, T.alter_man_s,(SELECT NAME FROM
		hx_organization_unload WHERE id = T.alter_organization_s limit 1)
		alter_organization_s, T.alter_time_s,T.service_unit,T.create_position,
		T1.product_id, T1.install_card_num, T1.delivery_order_num,
		T1.install_num, T1.machine_type,
		T1.gome_code, T1.brand, T1.machine_code, T1.internal_machine_code1,
		T1.internal_machine_code2, T1.external_machine_code,
		T1.ticket_num, T1.invoice_num, T1.buyer, T1.buy_date, T1.install_date,
		T1.install_unit, T1.sale_center,
		T1.sale_market, T1.sale_price, T1.is_sale, T1.warranty, T1.install_province,
		T1.install_detail_address,
		T1.bargain_code, T1.project_name, T1.product_note, T1.create_man_p,
		T1.create_organization_p, T1.create_time_p, T1.alter_man_p,
		T1.alter_organization_p, T1.alter_time_p,
		T2.customer_id, T2.customer_name, T2.customer_type, T2.customer_sex, T2.member_num,
		T2.province, T2.area_code,
		T2.phone, T2.telephone, T2.e_mail, T2.postcode, T2.address, T2.note,
		T2.create_man_c, T2.create_organization_c,
		T2.create_time_c, T2.alter_man_c, T2.alter_organization_c, T2.alter_time_c
		from
		hx_service_ticket T
		left join hx_service_product T1 on T1.product_id = T.product_id
		left join hx_service_customer T2 on T2.customer_id = T.customer_id
		where service_id = #{serviceId,jdbcType=VARCHAR}
		GROUP BY T.service_id
	</select>
	<select id="getServiceTicketPageList" parameterType="com.gome.common.page.Page"
		resultType="hashmap">
		SELECT
		T.service_id, T.jl_service_id,T.sequence, v13.code_value category, T.data_from
		dataFrom, v5.code_value service_type, T.link_man, T.link_phone,
		T.appointment_date, T.appointment_quantum, T.urgency_degree,
		T.dispatch_info, T.customer_describe,
		T.inform_repair_date, v11.code_value repair_mode, T.move_mode, T.charge_fluorine_num,
		T.distance_apply_num,
		T.service_pattern, T.service_card_num, T.service_man, T.service_date, T.traffic_fee,
		T.delay_fee,
		T.other_fee, T.product_exterior_satisfaction, T.product_exterior_significance,
		T.price_satisfaction,
		T.price_significance, T.service_satisfaction, T.service_significance,
		T.quality_satisfaction,
		T.quality_significance, T.physiology_satisfaction, T.physiology_significance,
		T.customer_satisfaction,
		T.warranty_policy, v10.code_value is_replace_parts, T.manul_num, T.is_double_install,
		T.input_time, T.appointment_install_date,
		T.move_address, T.machine_check_fault_reason, T.center_check_traffic_fee,
		T.center_check_delay_fee,
		T.center_check_other_fee, T.center_check_man, T.center_check_time, T.center_check_comment,
		T.headquarters_check_traffic_fee, T.headquarters_check_delay_fee,
		T.headquarters_check_other_fee,
		T.headquarters_check_man, T.headquarters_check_time, T.headquarters_check_comment,
		v7.code_value check_result,
		T.recall_man, v12.code_value recall_result, T.recall_time,
		T.is_clear,T.service_status, (SELECT NAME FROM hx_organization_unload
		WHERE id = T.center limit 1) center, T.website,
		T.comment_s, T.create_man_s,(SELECT NAME FROM hx_organization_unload WHERE id =
		T.create_organization_s limit 1) create_organization_s,
		T.create_time_s, T.alter_man_s,(SELECT NAME FROM
		hx_organization_unload WHERE id = T.alter_organization_s limit 1)
		alter_organization_s, T.alter_time_s,T.service_unit,T.create_position,
		T1.product_id, T1.install_card_num, T1.delivery_order_num,
		T1.install_num, T1.machine_type,
		v1.code_value gome_code, T1.brand, T1.machine_code, T1.internal_machine_code1,
		T1.internal_machine_code2, T1.external_machine_code,
		T1.ticket_num, T1.invoice_num, T1.buyer, T1.buy_date, T1.install_date, v14.wdmc
		install_unit, org.VTEXT sale_center,
		store.NAME1 sale_market, T1.sale_price, v4.code_value is_sale, T1.warranty,
		v15.code_value install_province, T1.install_detail_address,
		T1.bargain_code, T1.project_name, T1.product_note, T1.create_man_p,
		v16.name create_organization_p, T1.create_time_p, T1.alter_man_p,
		T1.alter_organization_p, T1.alter_time_p,
		T2.customer_id, T2.customer_name, v3.code_value customer_type, T2.customer_sex,
		T2.member_num, T2.province, T2.area_code,
		T2.phone, T2.telephone, T2.e_mail, T2.postcode, T2.address, T2.note,
		T2.create_man_c, T2.create_organization_c,
		T2.create_time_c, T2.alter_man_c, T2.alter_organization_c, T2.alter_time_c
		FROM
		hx_service_ticket T
		LEFT JOIN hx_service_product T1 ON T1.product_id = T.product_id
		LEFT JOIN hx_service_customer T2 ON T2.customer_id = T.customer_id
		LEFT JOIN ecc_sales_org org on org.VKORG=T1.sale_center
        LEFT JOIN ecc_store store on store.WERKS=T1.sale_market and store.VKORG NOT LIKE 'S%'
		LEFT JOIN v_code v1 ON v1.code_id='gmdm' AND T1.gome_code=v1.code_key
		LEFT JOIN v_code v2 ON v2.code_id='pp' AND T1.brand=v2.code_key
		LEFT JOIN v_code v3 ON v3.code_id='khlb' AND T2.customer_type=v3.code_key
		LEFT JOIN v_code v4 ON v4.code_id='sf' AND T1.is_sale=v4.code_key
		LEFT JOIN v_code v5 ON v5.code_id='djlx' AND T.service_type=v5.code_key
		LEFT JOIN v_code v7 ON v7.code_id='shjg' AND
		T.check_result=v7.code_key
		LEFT JOIN v_code v10 ON v10.code_id='sf' AND
		T.is_replace_parts=v10.code_key
		LEFT JOIN v_code v11 ON v11.code_id='wxfs' AND T.repair_mode=v11.code_key
		LEFT JOIN v_code v12 ON v12.code_id='hfjg' AND
		T.recall_result=v12.code_key
		LEFT JOIN v_code v13 ON v13.code_id='wxpl' AND T.category=v13.code_key
		LEFT JOIN crm_website v14 ON T1.install_unit=v14.azwd01
		LEFT JOIN v_code v15 ON v15.code_id='csf'  AND T1.install_province=v15.code_key
		LEFT JOIN (SELECT cw.azwd01 AS CODE,cw.wdmc AS NAME FROM crm_website cw UNION 
	    SELECT ho.org_code AS CODE ,ho.org_name AS NAME FROM hx_organization ho WHERE ho.org_type='02' OR org_type='03' UNION 
	    SELECT es.WERKS CODE,es.NAME1 NAME FROM ecc_store es WHERE es.VKORG LIKE 'S%') v16 ON v16.code=T1.create_organization_p
		WHERE 1=1
		<if test="param.createMan != null and param.createMan !=''">
			and T.service_id NOT IN(SELECT DISTINCT(service_id) FROM
			hx_service_ticket WHERE service_status='s1' AND create_man_s !=
			#{param.createMan})
		</if>
		<if test="param.serviceType != null and param.serviceType !=''">and T.service_type like
			CONCAT('%',#{param.serviceType},'%')</if>
		<if test="param.customerType != null and param.customerType !=''">and T2.customer_type like
			CONCAT('%',#{param.customerType},'%')</if>
		<!-- <if test="param.serviceStatus != null and param.serviceStatus !=''"><![CDATA[and 
			T.service_status >= #{param.serviceStatus}]]></if> -->
		<if
			test="param.createOrganization != null and param.createOrganization !=''">and
			FIND_IN_SET(T.create_organization_s,#{param.createOrganization})</if>

		<if
			test="param.serviceCustomer !=null and param.serviceCustomer.customerType != null and param.serviceCustomer.customerType !=''">and T2.customer_type like
			CONCAT('%',#{param.serviceCustomer.customerType},'%')</if>
		<if
			test="param.serviceCustomer !=null and param.serviceCustomer.customerName != null and param.serviceCustomer.customerName !=''">and T2.customer_name like
			CONCAT('%',#{param.serviceCustomer.customerName},'%')</if>
		<if
			test="param.serviceCustomer !=null and param.serviceCustomer.phone != null and param.serviceCustomer.phone !=''">and T2.phone like CONCAT('%',#{param.serviceCustomer.phone},'%')
		</if>
		<if
			test="param.serviceCustomer !=null and param.serviceCustomer.telephone != null and param.serviceCustomer.telephone !=''">and T2.telephone like
			CONCAT('%',#{param.serviceCustomer.telephone},'%')</if>

		<if
			test="param.serviceProduct !=null and param.serviceProduct.brand != null and param.serviceProduct.brand !=''">and T1.brand = #{param.serviceProduct.brand}
		</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.deliveryOrderNum != null and param.serviceProduct.deliveryOrderNum !=''">and T1.delivery_order_num like
			CONCAT('%',#{param.serviceProduct.deliveryOrderNum},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.externalMachineCode != null and param.serviceProduct.externalMachineCode !=''">and T1.external_machine_code like
			CONCAT('%',#{param.serviceProduct.externalMachineCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.gomeCode != null and param.serviceProduct.gomeCode !=''">and T1.gome_code like
			CONCAT('%',#{param.serviceProduct.gomeCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.installUnit != null and param.serviceProduct.installUnit !=''">and T1.install_unit like
			CONCAT('%',#{param.serviceProduct.installUnit},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.internalMachineCode1 != null and param.serviceProduct.internalMachineCode1 !=''">and T1.internal_machine_code1 like
			CONCAT('%',#{param.serviceProduct.internalMachineCode1},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.internalMachineCode2 != null and param.serviceProduct.internalMachineCode2 !=''">and T1.internal_machine_code2 like
			CONCAT('%',#{param.serviceProduct.internalMachineCode2},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.machineCode != null and param.serviceProduct.machineCode !=''">and T1.machine_code like
			CONCAT('%',#{param.serviceProduct.machineCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.machineType != null and param.serviceProduct.machineType !=''">and T1.machine_type like
			CONCAT('%',#{param.serviceProduct.machineType},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.ticketNum != null and param.serviceProduct.ticketNum !=''">and T1.ticket_num like
			CONCAT('%',#{param.serviceProduct.ticketNum},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.bargainCode != null and param.serviceProduct.bargainCode !=''">and T1.bargain_code like
			CONCAT('%',#{param.serviceProduct.bargainCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.bargainCode != null and param.serviceProduct.bargainCode !=''">and T1.bargain_code like
			CONCAT('%',#{param.serviceProduct.bargainCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.isSale != null and param.serviceProduct.isSale !=''">and T1.is_sale like
			CONCAT('%',#{param.serviceProduct.isSale},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.buyer != null and param.serviceProduct.buyer !=''">and T1.buyer like CONCAT('%',#{param.serviceProduct.buyer},'%')
		</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.saleCenter != null and param.serviceProduct.saleCenter !=''">and T1.sale_center like
			CONCAT('%',#{param.serviceProduct.saleCenter},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.saleMarket != null and param.serviceProduct.saleMarket !=''">and T1.sale_market like
			CONCAT('%',#{param.serviceProduct.saleMarket},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.installProvince != null and param.serviceProduct.installProvince !=''">and T1.install_province like
			CONCAT('%',#{param.serviceProduct.installProvince},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.installDetailAddress != null and param.serviceProduct.installDetailAddress !=''">and T1.install_detail_address like
			CONCAT('%',#{param.serviceProduct.installDetailAddress},'%')</if>

		<if
			test="param.serviceTicket !=null and param.serviceTicket.serviceType != null and param.serviceTicket.serviceType !=''">and T.service_type like
			CONCAT('%',#{param.serviceTicket.serviceType},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.serviceId != null and param.serviceTicket.serviceId !=''">and T.service_id like
			CONCAT('%',#{param.serviceTicket.serviceId},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.createManS != null and param.serviceTicket.createManS !=''">and T.create_man_s like
			CONCAT('%',#{param.serviceTicket.createManS},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.createOrganizationS != null and param.serviceTicket.createOrganizationS !=''">and T.create_organization_s like
			CONCAT('%',#{param.serviceTicket.createOrganizationS},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.serviceStatus != null and param.serviceTicket.serviceStatus !=''">and T.service_status like
			CONCAT('%',#{param.serviceTicket.serviceStatus},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.isReplaceParts != null and param.serviceTicket.isReplaceParts !=''">and T.is_replace_parts like
			CONCAT('%',#{param.serviceTicket.isReplaceParts},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.manulNum != null and param.serviceTicket.manulNum !=''">and T.manul_num like
			CONCAT('%',#{param.serviceTicket.manulNum},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.center != null and param.serviceTicket.center !=''">and T.center like CONCAT('%',#{param.serviceTicket.center},'%')
		</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.linkMan != null and param.serviceTicket.linkMan !=''">and T.link_man like
			CONCAT('%',#{param.serviceTicket.linkMan},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.linkPhone != null and param.serviceTicket.linkPhone !=''">and T.link_phone like
			CONCAT('%',#{param.serviceTicket.linkPhone},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.website != null and param.serviceTicket.website !=''">and T.website like
			CONCAT('%',#{param.serviceTicket.website},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.checkResult != null and param.serviceTicket.checkResult !=''">and T.check_result like
			CONCAT('%',#{param.serviceTicket.checkResult},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.machineCheckFaultReason != null and param.serviceTicket.machineCheckFaultReason !=''">and T.machine_check_fault_reason like
			CONCAT('%',#{param.serviceTicket.machineCheckFaultReason},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.centerCheckComment != null and param.serviceTicket.centerCheckComment !=''">and T.center_check_comment like
			CONCAT('%',#{param.serviceTicket.centerCheckComment},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.headquartersCheckComment != null and param.serviceTicket.headquartersCheckComment !=''">and T.headquarters_check_comment like
			CONCAT('%',#{param.serviceTicket.headquartersCheckComment},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.recallResult != null and param.serviceTicket.recallResult !=''">and T.recall_result like
			CONCAT('%',#{param.serviceTicket.recallResult},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.distanceApplyNum != null and param.serviceTicket.distanceApplyNum !=''">and T.distance_apply_num like
			CONCAT('%',#{param.serviceTicket.distanceApplyNum},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.repairMode != null and param.serviceTicket.repairMode !=''">and T.repair_mode like
			CONCAT('%',#{param.serviceTicket.repairMode},'%')</if>

		<if test="param.mod_createTime_st !=null and param.mod_createTime_st != '' "><![CDATA[ and T.create_time_s >=#{param.mod_createTime_st} ]]></if>
		<if test="param.mod_createTime_end !=null and param.mod_createTime_end != '' "><![CDATA[ and T.create_time_s <=#{param.mod_createTime_end} ]]></if>
		<if test="param.mod_installDate_st !=null and param.mod_installDate_st != '' "><![CDATA[ and T1.install_date >=#{param.mod_installDate_st} ]]></if>
		<if test="param.mod_installDate_end !=null and param.mod_installDate_end != '' "><![CDATA[ and T1.install_date <=#{param.mod_installDate_end}]]></if>
		<if test="param.mod_serviceDate_st !=null and param.mod_serviceDate_st != '' "><![CDATA[ and T.service_date >=#{param.mod_serviceDate_st} ]]></if>
		<if test="param.mod_serviceDate_end !=null and param.mod_serviceDate_end != '' "><![CDATA[ and T.service_date <=#{param.mod_serviceDate_end} ]]></if>
		<if test="param.mod_saleDate_st !=null and param.mod_saleDate_st != '' "><![CDATA[ and T1.buy_date >=#{param.mod_saleDate_st} ]]></if>
		<if test="param.mod_saleDate_end !=null and param.mod_saleDate_end != '' "><![CDATA[ and T1.buy_date <=#{param.mod_saleDate_end} ]]></if>
		<if test="param.mod_checkDate_st !=null and param.mod_checkDate_st != '' "><![CDATA[ and T.headquarters_check_time >=#{param.mod_checkDate_st} ]]></if>
		<if test="param.mod_checkDate_end !=null and param.mod_checkDate_end != '' "><![CDATA[ and T.headquarters_check_time <=#{param.mod_checkDate_end} ]]></if>
		<if test="param.mod_createDate_st !=null and param.mod_createDate_st != '' "><![CDATA[ and T.create_time_s >=#{param.mod_createDate_st} ]]></if>
		<if test="param.mod_createDate_end !=null and param.mod_createDate_end != '' "><![CDATA[ and T.create_time_s <=#{param.mod_createDate_end} ]]></if>

		GROUP BY T.service_id
	</select>
	<select id="getGMZBPageList" parameterType="com.gome.common.page.Page"
		resultType="hashmap">
		SELECT
		T.service_id, T.jl_service_id,T.sequence, v13.code_value category, T.data_from
		dataFrom, v5.code_value service_type, T.link_man, T.link_phone,
		T.appointment_date, T.appointment_quantum, T.urgency_degree,
		T.dispatch_info, T.customer_describe,
		T.inform_repair_date, v11.code_value repair_mode, T.move_mode, T.charge_fluorine_num,
		T.distance_apply_num,
		T.service_pattern, T.service_card_num, T.service_man, T.service_date, T.traffic_fee,
		T.delay_fee,
		T.other_fee, T.product_exterior_satisfaction, T.product_exterior_significance,
		T.price_satisfaction,
		T.price_significance, T.service_satisfaction, T.service_significance,
		T.quality_satisfaction,
		T.quality_significance, T.physiology_satisfaction, T.physiology_significance,
		T.customer_satisfaction,
		T.warranty_policy, v10.code_value is_replace_parts, T.manul_num, T.is_double_install,
		T.input_time, T.appointment_install_date,
		T.move_address, T.machine_check_fault_reason, T.center_check_traffic_fee,
		T.center_check_delay_fee,
		T.center_check_other_fee, T.center_check_man, T.center_check_time, T.center_check_comment,
		T.headquarters_check_traffic_fee, T.headquarters_check_delay_fee,
		T.headquarters_check_other_fee,
		T.headquarters_check_man, T.headquarters_check_time, T.headquarters_check_comment,
		v7.code_value check_result,
		T.recall_man, v12.code_value recall_result, T.recall_time,
		T.is_clear,T.service_status, (SELECT NAME FROM hx_organization_unload
		WHERE id = T.center limit 1) center, T.website,
		T.comment_s, T.create_man_s,(SELECT NAME FROM hx_organization_unload WHERE id =
		T.create_organization_s limit 1) create_organization_s,
		T.create_time_s, T.alter_man_s,(SELECT NAME FROM
		hx_organization_unload WHERE id = T.alter_organization_s limit 1)
		alter_organization_s, T.alter_time_s,T.service_unit,T.create_position,
		T1.product_id, T1.install_card_num, T1.delivery_order_num,
		T1.install_num, T1.machine_type,
		v1.code_value gome_code, T1.brand, T1.machine_code, T1.internal_machine_code1,
		T1.internal_machine_code2, T1.external_machine_code,
		T1.ticket_num, T1.invoice_num, T1.buyer, T1.buy_date, T1.install_date, v14.wdmc
		install_unit, T1.sale_center,
		T1.sale_market, T1.sale_price, v4.code_value is_sale, T1.warranty,
		T1.install_province, T1.install_detail_address,
		T1.bargain_code, T1.project_name, T1.product_note, T1.create_man_p,
		T1.create_organization_p, T1.create_time_p, T1.alter_man_p,
		T1.alter_organization_p, T1.alter_time_p,
		T2.customer_id, T2.customer_name, v3.code_value customer_type, T2.customer_sex,
		T2.member_num, T2.province, T2.area_code,
		T2.phone, T2.telephone, T2.e_mail, T2.postcode, T2.address, T2.note,
		T2.create_man_c, T2.create_organization_c,
		T2.create_time_c, T2.alter_man_c, T2.alter_organization_c, T2.alter_time_c
		FROM
		hx_service_ticket T
		LEFT JOIN hx_service_product T1 ON T1.product_id = T.product_id
		LEFT JOIN hx_service_customer T2 ON T2.customer_id = T.customer_id
		LEFT JOIN v_code v1 ON v1.code_id='gmdm' AND T1.gome_code=v1.code_key
		LEFT JOIN v_code v2 ON v2.code_id='pp' AND T1.brand=v2.code_key
		LEFT JOIN v_code v3 ON v3.code_id='khlb' AND T2.customer_type=v3.code_key
		LEFT JOIN v_code v4 ON v4.code_id='sf' AND T1.is_sale=v4.code_key
		LEFT JOIN v_code v5 ON v5.code_id='djlx' AND T.service_type=v5.code_key
		LEFT JOIN v_code v7 ON v7.code_id='shjg' AND
		T.check_result=v7.code_key
		LEFT JOIN v_code v10 ON v10.code_id='sf' AND
		T.is_replace_parts=v10.code_key
		LEFT JOIN v_code v11 ON v11.code_id='wxfs' AND T.repair_mode=v11.code_key
		LEFT JOIN v_code v12 ON v12.code_id='hfjg' AND
		T.recall_result=v12.code_key
		LEFT JOIN v_code v13 ON v13.code_id='wxpl' AND T.category=v13.code_key
		LEFT JOIN crm_website v14 ON T1.install_unit=v14.azwd01
		WHERE 1=1
		<!-- <if test="param.createMan != null and param.createMan !=''">
			and T.service_id NOT IN(SELECT DISTINCT(service_id) FROM
			hx_service_ticket WHERE service_status='s1' AND create_man_s !=
			#{param.createMan})
		</if> -->
		<if test="param.serviceType != null and param.serviceType !=''">and T.service_type like
			CONCAT('%',#{param.serviceType},'%')</if>
		<if test="param.customerType != null and param.customerType !=''">and T2.customer_type like
			CONCAT('%',#{param.customerType},'%')</if>
		<!-- <if test="param.serviceStatus != null and param.serviceStatus !=''"><![CDATA[and 
			T.service_status >= #{param.serviceStatus}]]></if> -->
		<!-- <if test="param.createOrganization != null and param.createOrganization 
			!=''">and FIND_IN_SET(T.create_organization_s,#{param.createOrganization})</if> -->

		<if
			test="param.serviceCustomer !=null and param.serviceCustomer.customerType != null and param.serviceCustomer.customerType !=''">and T2.customer_type like
			CONCAT('%',#{param.serviceCustomer.customerType},'%')</if>
		<if
			test="param.serviceCustomer !=null and param.serviceCustomer.customerName != null and param.serviceCustomer.customerName !=''">and T2.customer_name like
			CONCAT('%',#{param.serviceCustomer.customerName},'%')</if>
		<if
			test="param.serviceCustomer !=null and param.serviceCustomer.phone != null and param.serviceCustomer.phone !=''">and T2.phone like CONCAT('%',#{param.serviceCustomer.phone},'%')
		</if>
		<if
			test="param.serviceCustomer !=null and param.serviceCustomer.telephone != null and param.serviceCustomer.telephone !=''">and T2.telephone like
			CONCAT('%',#{param.serviceCustomer.telephone},'%')</if>

		<if
			test="param.serviceProduct !=null and param.serviceProduct.brand != null and param.serviceProduct.brand !=''">and T1.brand = #{param.serviceProduct.brand}
		</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.deliveryOrderNum != null and param.serviceProduct.deliveryOrderNum !=''">and T1.delivery_order_num like
			CONCAT('%',#{param.serviceProduct.deliveryOrderNum},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.externalMachineCode != null and param.serviceProduct.externalMachineCode !=''">and T1.external_machine_code like
			CONCAT('%',#{param.serviceProduct.externalMachineCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.gomeCode != null and param.serviceProduct.gomeCode !=''">and T1.gome_code like
			CONCAT('%',#{param.serviceProduct.gomeCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.installUnit != null and param.serviceProduct.installUnit !=''">and T1.install_unit like
			CONCAT('%',#{param.serviceProduct.installUnit},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.internalMachineCode1 != null and param.serviceProduct.internalMachineCode1 !=''">and T1.internal_machine_code1 like
			CONCAT('%',#{param.serviceProduct.internalMachineCode1},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.internalMachineCode2 != null and param.serviceProduct.internalMachineCode2 !=''">and T1.internal_machine_code2 like
			CONCAT('%',#{param.serviceProduct.internalMachineCode2},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.machineCode != null and param.serviceProduct.machineCode !=''">and T1.machine_code like
			CONCAT('%',#{param.serviceProduct.machineCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.machineType != null and param.serviceProduct.machineType !=''">and T1.machine_type like
			CONCAT('%',#{param.serviceProduct.machineType},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.ticketNum != null and param.serviceProduct.ticketNum !=''">and T1.ticket_num like
			CONCAT('%',#{param.serviceProduct.ticketNum},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.bargainCode != null and param.serviceProduct.bargainCode !=''">and T1.bargain_code like
			CONCAT('%',#{param.serviceProduct.bargainCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.bargainCode != null and param.serviceProduct.bargainCode !=''">and T1.bargain_code like
			CONCAT('%',#{param.serviceProduct.bargainCode},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.isSale != null and param.serviceProduct.isSale !=''">and T1.is_sale like
			CONCAT('%',#{param.serviceProduct.isSale},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.buyer != null and param.serviceProduct.buyer !=''">and T1.buyer like CONCAT('%',#{param.serviceProduct.buyer},'%')
		</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.saleCenter != null and param.serviceProduct.saleCenter !=''">and T1.sale_center like
			CONCAT('%',#{param.serviceProduct.saleCenter},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.saleMarket != null and param.serviceProduct.saleMarket !=''">and T1.sale_market like
			CONCAT('%',#{param.serviceProduct.saleMarket},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.installProvince != null and param.serviceProduct.installProvince !=''">and T1.install_province like
			CONCAT('%',#{param.serviceProduct.installProvince},'%')</if>
		<if
			test="param.serviceProduct !=null and param.serviceProduct.installDetailAddress != null and param.serviceProduct.installDetailAddress !=''">and T1.install_detail_address like
			CONCAT('%',#{param.serviceProduct.installDetailAddress},'%')</if>

		<if
			test="param.serviceTicket !=null and param.serviceTicket.serviceType != null and param.serviceTicket.serviceType !=''">and T.service_type like
			CONCAT('%',#{param.serviceTicket.serviceType},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.serviceId != null and param.serviceTicket.serviceId !=''">and T.service_id like
			CONCAT('%',#{param.serviceTicket.serviceId},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.createManS != null and param.serviceTicket.createManS !=''">and T.create_man_s like
			CONCAT('%',#{param.serviceTicket.createManS},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.createOrganizationS != null and param.serviceTicket.createOrganizationS !=''">and T.create_organization_s like
			CONCAT('%',#{param.serviceTicket.createOrganizationS},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.serviceStatus != null and param.serviceTicket.serviceStatus !=''">and T.service_status like
			CONCAT('%',#{param.serviceTicket.serviceStatus},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.isReplaceParts != null and param.serviceTicket.isReplaceParts !=''">and T.is_replace_parts like
			CONCAT('%',#{param.serviceTicket.isReplaceParts},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.manulNum != null and param.serviceTicket.manulNum !=''">and T.manul_num like
			CONCAT('%',#{param.serviceTicket.manulNum},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.center != null and param.serviceTicket.center !=''">and T.center like CONCAT('%',#{param.serviceTicket.center},'%')
		</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.linkMan != null and param.serviceTicket.linkMan !=''">and T.link_man like
			CONCAT('%',#{param.serviceTicket.linkMan},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.linkPhone != null and param.serviceTicket.linkPhone !=''">and T.link_phone like
			CONCAT('%',#{param.serviceTicket.linkPhone},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.website != null and param.serviceTicket.website !=''">and T.website like
			CONCAT('%',#{param.serviceTicket.website},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.checkResult != null and param.serviceTicket.checkResult !=''">and T.check_result like
			CONCAT('%',#{param.serviceTicket.checkResult},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.machineCheckFaultReason != null and param.serviceTicket.machineCheckFaultReason !=''">and T.machine_check_fault_reason like
			CONCAT('%',#{param.serviceTicket.machineCheckFaultReason},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.centerCheckComment != null and param.serviceTicket.centerCheckComment !=''">and T.center_check_comment like
			CONCAT('%',#{param.serviceTicket.centerCheckComment},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.headquartersCheckComment != null and param.serviceTicket.headquartersCheckComment !=''">and T.headquarters_check_comment like
			CONCAT('%',#{param.serviceTicket.headquartersCheckComment},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.recallResult != null and param.serviceTicket.recallResult !=''">and T.recall_result like
			CONCAT('%',#{param.serviceTicket.recallResult},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.distanceApplyNum != null and param.serviceTicket.distanceApplyNum !=''">and T.distance_apply_num like
			CONCAT('%',#{param.serviceTicket.distanceApplyNum},'%')</if>
		<if
			test="param.serviceTicket !=null and param.serviceTicket.repairMode != null and param.serviceTicket.repairMode !=''">and T.repair_mode like
			CONCAT('%',#{param.serviceTicket.repairMode},'%')</if>

		<if
			test="param.mod_createTime_st !=null and param.mod_createTime_st != '' "><![CDATA[ and T.create_time_s >=#{param.mod_createTime_st} ]]></if>
		<if
			test="param.mod_createTime_end !=null and param.mod_createTime_end != '' "><![CDATA[ and T.create_time_s <=#{param.mod_createTime_end} ]]></if>
		<if
			test="param.mod_installDate_st !=null and param.mod_installDate_st != '' "><![CDATA[ and T1.install_date >=#{param.mod_installDate_st} ]]></if>
		<if
			test="param.mod_installDate_end !=null and param.mod_installDate_end != '' "><![CDATA[ and T1.install_date <=#{param.mod_installDate_end} ]]></if>
		<if
			test="param.mod_serviceDate_st !=null and param.mod_serviceDate_st != '' "><![CDATA[ and T.service_date >=#{param.mod_serviceDate_st} ]]></if>
		<if
			test="param.mod_serviceDate_end !=null and param.mod_serviceDate_end != '' "><![CDATA[ and T.service_date <=#{param.mod_serviceDate_end} ]]></if>
		<if test="param.mod_saleDate_st !=null and param.mod_saleDate_st != '' "><![CDATA[ and T1.buy_date >=#{param.mod_saleDate_st} ]]></if>
		<if test="param.mod_saleDate_end !=null and param.mod_saleDate_end != '' "><![CDATA[ and T1.buy_date <=#{param.mod_saleDate_end} ]]></if>
		<if test="param.mod_checkDate_st !=null and param.mod_checkDate_st != '' "><![CDATA[ and T.headquarters_check_time >=#{param.mod_checkDate_st} ]]></if>
		<if
			test="param.mod_checkDate_end !=null and param.mod_checkDate_end != '' "><![CDATA[ and T.headquarters_check_time <=#{param.mod_checkDate_end} ]]></if>
		<if
			test="param.mod_createDate_st !=null and param.mod_createDate_st != '' "><![CDATA[ and T.create_time_s >=#{param.mod_createDate_st} ]]></if>
		<if
			test="param.mod_createDate_end !=null and param.mod_createDate_end != '' "><![CDATA[ and T.create_time_s <=#{param.mod_createDate_end} ]]></if>

		GROUP BY T.service_id
	</select>

	<select id="getStandardSettlementTicket" parameterType="com.gome.gmhx.entity.HxExamineSettlementTicket"
		resultType="com.gome.gmhx.entity.HxSettlementDetail">
		SELECT T.service_id serviceId,P.category,P.brand,T.service_type settlementType,
		F.expense_standard serviceFee,F.expense_standard
		settlementFee,F.expense_standard examineFee,F.manager_fee
		managementFee,
		T.center_check_man settlementUnitConfirmMan,T.center_check_time
		settlementUnitConfirmTime,T.center_check_comment
		settlementUnitComment,
		T.headquarters_check_man headquartersCheckMan,T.headquarters_check_time
		headquartersCheckTime,T.center parentOrganization,T.service_unit
		serviceUnit
		FROM hx_service_ticket T
		LEFT JOIN hx_service_product P ON P.product_id = T.product_id
		LEFT JOIN hx_standard_fee F ON F.model = P.machine_type
		WHERE 1=1
		<if test="category !=null and category!=''">
			and P.category like CONCAT('%',#{category},'%')
		</if>
		<if test="serviceUnit != null and serviceUnit !=''">and T.create_organization_s like
			CONCAT('%',#{serviceUnit},'%')</if>
		<if test="settlementType != null and settlementType !=''">and T.service_type like CONCAT('%',#{settlementType},'%')
		</if>
		<if test="settlementTime !=null and settlementTime != '' ">and EXTRACT(YEAR_MONTH FROM
			T.create_time_s)=EXTRACT(YEAR_MONTH FROM
			#{settlementTime,jdbcType=TIMESTAMP})</if>
		GROUP BY T.service_id
	</select>

	<select id="getOverproofSettlementTicket" parameterType="com.gome.gmhx.entity.HxExamineSettlementTicket"
		resultType="com.gome.gmhx.entity.HxSettlementDetail">
		SELECT
		T.list_number serviceId,
		M.sumPrice serviceFee,
		M.sumPrice settlementFee,
		T.send_company serviceUnit
		FROM hx_material_manage T
		LEFT JOIN (SELECT list_number, GROUP_CONCAT(fitting_code SEPARATOR '、')
		fitting_code,apply_count,price,
		SUM(IFNULL(apply_count,0)*IFNULL(price,0)) sumPrice FROM
		hx_material_detail
		GROUP BY list_number) M ON M.list_number = T.list_number
		WHERE T.send_company = 'bjdzwd'
		AND EXTRACT(YEAR_MONTH FROM T.create_time)=EXTRACT(YEAR_MONTH FROM
		#{settlementTime,jdbcType=TIMESTAMP})
		GROUP BY T.list_number
	</select>

	<delete id="deleteServiceTicketByPrimaryKey" parameterType="java.lang.String">
		delete from hx_service_ticket
		where service_id = #{serviceId,jdbcType=VARCHAR}
	</delete>
	<insert id="insertServiceTicketList" parameterType="java.util.List">
		insert into hx_service_ticket (service_id, jl_service_id,customer_id,
		product_id,
		sequence, category,data_from, service_type,
		link_man, link_phone, appointment_date,
		appointment_quantum, urgency_degree, dispatch_info,
		customer_describe, inform_repair_date, repair_mode,
		move_mode, charge_fluorine_num, distance_apply_num,
		service_pattern, service_card_num, service_man,
		service_date, traffic_fee, delay_fee,
		other_fee, product_exterior_satisfaction, product_exterior_significance,
		price_satisfaction, price_significance, service_satisfaction,
		service_significance, quality_satisfaction,
		quality_significance, physiology_satisfaction,
		physiology_significance, customer_satisfaction,
		warranty_policy, is_replace_parts, manul_num,
		is_double_install, input_time, appointment_install_date,
		move_address, machine_check_fault_reason, center_check_traffic_fee,
		center_check_delay_fee, center_check_other_fee, center_check_man,
		center_check_time, center_check_result, center_check_comment,
		headquarters_check_traffic_fee, headquarters_check_delay_fee,
		headquarters_check_other_fee, headquarters_check_man,
		headquarters_check_time, headquarters_check_result,
		headquarters_check_comment, check_result,
		recall_man, recall_result, recall_time,
		is_clear, service_status, center,
		website, comment_s, create_man_s,
		create_organization_s, create_time_s, alter_man_s,
		alter_organization_s, alter_time_s, process_instance_id,
		applicant, apply_date, service_unit, create_position,is_pass_check)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.serviceId,jdbcType=VARCHAR},#{item.jlServiceId,jdbcType=VARCHAR},
			#{item.customerId,jdbcType=VARCHAR},
			#{item.productId,jdbcType=VARCHAR},
			#{item.sequence,jdbcType=INTEGER}, #{item.category,jdbcType=VARCHAR},
			#{item.dataFrom,jdbcType=REAL}, #{item.serviceType,jdbcType=VARCHAR},
			#{item.linkMan,jdbcType=VARCHAR}, #{item.linkPhone,jdbcType=VARCHAR},
			#{item.appointmentDate,jdbcType=TIMESTAMP},
			#{item.appointmentQuantum,jdbcType=VARCHAR},
			#{item.urgencyDegree,jdbcType=VARCHAR},
			#{item.dispatchInfo,jdbcType=VARCHAR},
			#{item.customerDescribe,jdbcType=VARCHAR},
			#{item.informRepairDate,jdbcType=TIMESTAMP},
			#{item.repairMode,jdbcType=VARCHAR},
			#{item.moveMode,jdbcType=VARCHAR},
			#{item.chargeFluorineNum,jdbcType=VARCHAR},
			#{item.distanceApplyNum,jdbcType=VARCHAR},
			#{item.servicePattern,jdbcType=VARCHAR},
			#{item.serviceCardNum,jdbcType=VARCHAR},
			#{item.serviceMan,jdbcType=VARCHAR},
			#{item.serviceDate,jdbcType=TIMESTAMP},
			#{item.trafficFee,jdbcType=REAL}, #{item.delayFee,jdbcType=REAL},
			#{item.otherFee,jdbcType=REAL},
			#{item.productExteriorSatisfaction,jdbcType=VARCHAR},
			#{item.productExteriorSignificance,jdbcType=VARCHAR},
			#{item.priceSatisfaction,jdbcType=VARCHAR},
			#{item.priceSignificance,jdbcType=VARCHAR},
			#{item.serviceSatisfaction,jdbcType=VARCHAR},
			#{item.serviceSignificance,jdbcType=VARCHAR},
			#{item.qualitySatisfaction,jdbcType=VARCHAR},
			#{item.qualitySignificance,jdbcType=VARCHAR},
			#{item.physiologySatisfaction,jdbcType=VARCHAR},
			#{item.physiologySignificance,jdbcType=VARCHAR},
			#{item.customerSatisfaction,jdbcType=VARCHAR},
			#{item.warrantyPolicy,jdbcType=VARCHAR},
			#{item.isReplaceParts,jdbcType=BIT},
			#{item.manulNum,jdbcType=VARCHAR},
			#{item.isDoubleInstall,jdbcType=BIT},
			#{item.inputTime,jdbcType=TIMESTAMP},
			#{item.appointmentInstallDate,jdbcType=TIMESTAMP},
			#{item.moveAddress,jdbcType=VARCHAR},
			#{item.machineCheckFaultReason,jdbcType=VARCHAR},
			#{item.centerCheckTrafficFee,jdbcType=REAL},
			#{item.centerCheckDelayFee,jdbcType=REAL},
			#{item.centerCheckOtherFee,jdbcType=REAL},
			#{item.centerCheckMan,jdbcType=VARCHAR},
			#{item.centerCheckTime,jdbcType=TIMESTAMP},
			#{item.centerCheckResult,jdbcType=VARCHAR},
			#{item.centerCheckComment,jdbcType=VARCHAR},
			#{item.headquartersCheckTrafficFee,jdbcType=REAL},
			#{item.headquartersCheckDelayFee,jdbcType=REAL},
			#{item.headquartersCheckOtherFee,jdbcType=REAL},
			#{item.headquartersCheckMan,jdbcType=VARCHAR},
			#{item.headquartersCheckTime,jdbcType=TIMESTAMP},
			#{item.headquartersCheckResult,jdbcType=VARCHAR},
			#{item.headquartersCheckComment,jdbcType=VARCHAR},
			#{item.checkResult,jdbcType=VARCHAR},
			#{item.recallMan,jdbcType=VARCHAR},
			#{item.recallResult,jdbcType=VARCHAR},
			#{item.recallTime,jdbcType=TIMESTAMP},
			#{item.isClear,jdbcType=BIT}, #{item.serviceStatus,jdbcType=VARCHAR},
			#{item.center,jdbcType=VARCHAR},
			#{item.website,jdbcType=VARCHAR}, #{item.commentS,jdbcType=VARCHAR},
			#{item.createManS,jdbcType=VARCHAR},
			#{item.createOrganizationS,jdbcType=VARCHAR},
			#{item.createTimeS,jdbcType=TIMESTAMP},
			#{item.alterManS,jdbcType=VARCHAR},
			#{item.alterOrganizationS,jdbcType=VARCHAR},
			#{item.alterTimeS,jdbcType=TIMESTAMP},
			#{item.processInstanceId,jdbcType=VARCHAR},
			#{item.applicant,jdbcType=VARCHAR},
			#{item.applyDate,jdbcType=TIMESTAMP},#{item.serviceUnit,jdbcType=VARCHAR},#{item.createPosition,jdbcType=VARCHAR},
			#{item.isPassCheck,jdbcType=BIT})
		</foreach>
	</insert>
	<insert id="insertServiceTicket" parameterType="com.gome.gmhx.entity.HxServiceTicket">
		insert into hx_service_ticket (service_id, jl_service_id, customer_id,
		product_id, sequence, category, data_from,
		service_type, link_man, link_phone,
		appointment_date, appointment_quantum,
		urgency_degree, dispatch_info, customer_describe,
		inform_repair_date, repair_mode, move_mode,
		charge_fluorine_num, distance_apply_num, service_pattern,
		service_card_num, service_man, service_date,
		traffic_fee, delay_fee, other_fee,
		product_exterior_satisfaction, product_exterior_significance,
		price_satisfaction, price_significance, service_satisfaction,
		service_significance, quality_satisfaction,
		quality_significance, physiology_satisfaction,
		physiology_significance, customer_satisfaction,
		warranty_policy, is_replace_parts, manul_num,
		is_double_install, input_time, appointment_install_date,
		move_address, machine_check_fault_reason, center_check_traffic_fee,
		center_check_delay_fee, center_check_other_fee, center_check_man,
		center_check_time, center_check_result, center_check_comment,
		headquarters_check_traffic_fee, headquarters_check_delay_fee,
		headquarters_check_other_fee, headquarters_check_man,
		headquarters_check_time, headquarters_check_result,
		headquarters_check_comment, check_result,
		recall_man, recall_result, recall_time,
		is_clear, service_status, center,
		website, comment_s, create_man_s,
		create_organization_s, create_time_s, alter_man_s,
		alter_organization_s, alter_time_s, process_instance_id,
		applicant, apply_date, service_unit,
		create_position, is_pass_check)
		values (#{serviceId,jdbcType=VARCHAR}, #{jlServiceId,jdbcType=VARCHAR},
		#{customerId,jdbcType=VARCHAR},
		#{productId,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, #{category,jdbcType=VARCHAR},
		#{dataFrom,jdbcType=REAL},
		#{serviceType,jdbcType=VARCHAR}, #{linkMan,jdbcType=VARCHAR}, #{linkPhone,jdbcType=VARCHAR},
		#{appointmentDate,jdbcType=TIMESTAMP},
		#{appointmentQuantum,jdbcType=VARCHAR},
		#{urgencyDegree,jdbcType=VARCHAR}, #{dispatchInfo,jdbcType=VARCHAR},
		#{customerDescribe,jdbcType=VARCHAR},
		#{informRepairDate,jdbcType=TIMESTAMP},
		#{repairMode,jdbcType=VARCHAR}, #{moveMode,jdbcType=VARCHAR},
		#{chargeFluorineNum,jdbcType=VARCHAR},
		#{distanceApplyNum,jdbcType=VARCHAR},
		#{servicePattern,jdbcType=VARCHAR},
		#{serviceCardNum,jdbcType=VARCHAR}, #{serviceMan,jdbcType=VARCHAR},
		#{serviceDate,jdbcType=TIMESTAMP},
		#{trafficFee,jdbcType=REAL}, #{delayFee,jdbcType=REAL}, #{otherFee,jdbcType=REAL},
		#{productExteriorSatisfaction,jdbcType=VARCHAR},
		#{productExteriorSignificance,jdbcType=VARCHAR},
		#{priceSatisfaction,jdbcType=VARCHAR},
		#{priceSignificance,jdbcType=VARCHAR},
		#{serviceSatisfaction,jdbcType=VARCHAR},
		#{serviceSignificance,jdbcType=VARCHAR},
		#{qualitySatisfaction,jdbcType=VARCHAR},
		#{qualitySignificance,jdbcType=VARCHAR},
		#{physiologySatisfaction,jdbcType=VARCHAR},
		#{physiologySignificance,jdbcType=VARCHAR},
		#{customerSatisfaction,jdbcType=VARCHAR},
		#{warrantyPolicy,jdbcType=VARCHAR}, #{isReplaceParts,jdbcType=BIT},
		#{manulNum,jdbcType=VARCHAR},
		#{isDoubleInstall,jdbcType=VARCHAR}, #{inputTime,jdbcType=TIMESTAMP},
		#{appointmentInstallDate,jdbcType=TIMESTAMP},
		#{moveAddress,jdbcType=VARCHAR},
		#{machineCheckFaultReason,jdbcType=VARCHAR},
		#{centerCheckTrafficFee,jdbcType=REAL},
		#{centerCheckDelayFee,jdbcType=REAL},
		#{centerCheckOtherFee,jdbcType=REAL},
		#{centerCheckMan,jdbcType=VARCHAR},
		#{centerCheckTime,jdbcType=TIMESTAMP},
		#{centerCheckResult,jdbcType=VARCHAR},
		#{centerCheckComment,jdbcType=VARCHAR},
		#{headquartersCheckTrafficFee,jdbcType=REAL},
		#{headquartersCheckDelayFee,jdbcType=REAL},
		#{headquartersCheckOtherFee,jdbcType=REAL},
		#{headquartersCheckMan,jdbcType=VARCHAR},
		#{headquartersCheckTime,jdbcType=TIMESTAMP},
		#{headquartersCheckResult,jdbcType=VARCHAR},
		#{headquartersCheckComment,jdbcType=VARCHAR},
		#{checkResult,jdbcType=VARCHAR},
		#{recallMan,jdbcType=VARCHAR}, #{recallResult,jdbcType=VARCHAR}, #{recallTime,jdbcType=TIMESTAMP},
		#{isClear,jdbcType=BIT}, #{serviceStatus,jdbcType=VARCHAR},
		#{center,jdbcType=VARCHAR},
		#{website,jdbcType=VARCHAR}, #{commentS,jdbcType=VARCHAR}, #{createManS,jdbcType=VARCHAR},
		#{createOrganizationS,jdbcType=VARCHAR},
		#{createTimeS,jdbcType=TIMESTAMP}, #{alterManS,jdbcType=VARCHAR},
		#{alterOrganizationS,jdbcType=VARCHAR},
		#{alterTimeS,jdbcType=TIMESTAMP},
		#{processInstanceId,jdbcType=VARCHAR},
		#{applicant,jdbcType=VARCHAR}, #{applyDate,jdbcType=TIMESTAMP}, #{serviceUnit,jdbcType=VARCHAR},
		#{createPosition,jdbcType=VARCHAR}, #{isPassCheck,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="com.gome.gmhx.entity.HxServiceTicket">
		insert into hx_service_ticket
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="serviceId != null">
				service_id,
			</if>
			<if test="customerId != null">
				customer_id,
			</if>
			<if test="productId != null">
				product_id,
			</if>
			<if test="sequence != null">
				sequence,
			</if>
			<if test="category != null">
				category,
			</if>
			<if test="serviceType != null">
				service_type,
			</if>
			<if test="linkMan != null">
				link_man,
			</if>
			<if test="linkPhone != null">
				link_phone,
			</if>
			<if test="appointmentDate != null">
				appointment_date,
			</if>
			<if test="appointmentQuantum != null">
				appointment_quantum,
			</if>
			<if test="urgencyDegree != null">
				urgency_degree,
			</if>
			<if test="dispatchInfo != null">
				dispatch_info,
			</if>
			<if test="customerDescribe != null">
				customer_describe,
			</if>
			<if test="informRepairDate != null">
				inform_repair_date,
			</if>
			<if test="repairMode != null">
				repair_mode,
			</if>
			<if test="moveMode != null">
				move_mode,
			</if>
			<if test="chargeFluorineNum != null">
				charge_fluorine_num,
			</if>
			<if test="distanceApplyNum != null">
				distance_apply_num,
			</if>
			<if test="servicePattern != null">
				service_pattern,
			</if>
			<if test="serviceCardNum != null">
				service_card_num,
			</if>
			<if test="serviceMan != null">
				service_man,
			</if>
			<if test="serviceDate != null">
				service_date,
			</if>
			<if test="trafficFee != null">
				traffic_fee,
			</if>
			<if test="delayFee != null">
				delay_fee,
			</if>
			<if test="otherFee != null">
				other_fee,
			</if>
			<if test="productExteriorSatisfaction != null">
				product_exterior_satisfaction,
			</if>
			<if test="productExteriorSignificance != null">
				product_exterior_significance,
			</if>
			<if test="priceSatisfaction != null">
				price_satisfaction,
			</if>
			<if test="priceSignificance != null">
				price_significance,
			</if>
			<if test="serviceSatisfaction != null">
				service_satisfaction,
			</if>
			<if test="serviceSignificance != null">
				service_significance,
			</if>
			<if test="qualitySatisfaction != null">
				quality_satisfaction,
			</if>
			<if test="qualitySignificance != null">
				quality_significance,
			</if>
			<if test="physiologySatisfaction != null">
				physiology_satisfaction,
			</if>
			<if test="physiologySignificance != null">
				physiology_significance,
			</if>
			<if test="customerSatisfaction != null">
				customer_satisfaction,
			</if>
			<if test="warrantyPolicy != null">
				warranty_policy,
			</if>
			<if test="isReplaceParts != null">
				is_replace_parts,
			</if>
			<if test="manulNum != null">
				manul_num,
			</if>
			<if test="isDoubleInstall != null">
				is_double_install,
			</if>
			<if test="inputTime != null">
				input_time,
			</if>
			<if test="appointmentInstallDate != null">
				appointment_install_date,
			</if>
			<if test="moveAddress != null">
				move_address,
			</if>
			<if test="machineCheckFaultReason != null">
				machine_check_fault_reason,
			</if>
			<if test="centerCheckTrafficFee != null">
				center_check_traffic_fee,
			</if>
			<if test="centerCheckDelayFee != null">
				center_check_delay_fee,
			</if>
			<if test="centerCheckOtherFee != null">
				center_check_other_fee,
			</if>
			<if test="centerCheckMan != null">
				center_check_man,
			</if>
			<if test="centerCheckTime != null">
				center_check_time,
			</if>
			<if test="centerCheckResult != null">
				center_check_result,
			</if>
			<if test="centerCheckComment != null">
				center_check_comment,
			</if>
			<if test="headquartersCheckTrafficFee != null">
				headquarters_check_traffic_fee,
			</if>
			<if test="headquartersCheckDelayFee != null">
				headquarters_check_delay_fee,
			</if>
			<if test="headquartersCheckOtherFee != null">
				headquarters_check_other_fee,
			</if>
			<if test="headquartersCheckMan != null">
				headquarters_check_man,
			</if>
			<if test="headquartersCheckTime != null">
				headquarters_check_time,
			</if>
			<if test="headquartersCheckResult != null">
				headquarters_check_result,
			</if>
			<if test="headquartersCheckComment != null">
				headquarters_check_comment,
			</if>
			<if test="checkResult != null">
				check_result,
			</if>
			<if test="recallMan != null">
				recall_man,
			</if>
			<if test="recallResult != null">
				recall_result,
			</if>
			<if test="recallTime != null">
				recall_time,
			</if>
			<if test="isClear != null">
				is_clear,
			</if>
			<if test="serviceStatus != null">
				service_status,
			</if>
			<if test="center != null">
				center,
			</if>
			<if test="website != null">
				website,
			</if>
			<if test="commentS != null">
				comment_s,
			</if>
			<if test="createManS != null">
				create_man_s,
			</if>
			<if test="createOrganizationS != null">
				create_organization_s,
			</if>
			<if test="createTimeS != null">
				create_time_s,
			</if>
			<if test="alterManS != null">
				alter_man_s,
			</if>
			<if test="alterOrganizationS != null">
				alter_organization_s,
			</if>
			<if test="alterTimeS != null">
				alter_time_s,
			</if>
			<if test="processInstanceId != null">
				process_instance_id,
			</if>
			<if test="applicant != null">
				applicant,
			</if>
			<if test="applyDate != null">
				apply_date,
			</if>
			<if test="serviceUnit != null">
				service_unit,
			</if>
			<if test="createPosition != null">
				create_position,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="serviceId != null">
				#{serviceId,jdbcType=VARCHAR},
			</if>
			<if test="customerId != null">
				#{customerId,jdbcType=VARCHAR},
			</if>
			<if test="productId != null">
				#{productId,jdbcType=VARCHAR},
			</if>
			<if test="sequence != null">
				#{sequence,jdbcType=INTEGER},
			</if>
			<if test="category != null">
				#{category,jdbcType=VARCHAR},
			</if>
			<if test="serviceType != null">
				#{serviceType,jdbcType=VARCHAR},
			</if>
			<if test="linkMan != null">
				#{linkMan,jdbcType=VARCHAR},
			</if>
			<if test="linkPhone != null">
				#{linkPhone,jdbcType=VARCHAR},
			</if>
			<if test="appointmentDate != null">
				#{appointmentDate,jdbcType=TIMESTAMP},
			</if>
			<if test="appointmentQuantum != null">
				#{appointmentQuantum,jdbcType=VARCHAR},
			</if>
			<if test="urgencyDegree != null">
				#{urgencyDegree,jdbcType=VARCHAR},
			</if>
			<if test="dispatchInfo != null">
				#{dispatchInfo,jdbcType=VARCHAR},
			</if>
			<if test="customerDescribe != null">
				#{customerDescribe,jdbcType=VARCHAR},
			</if>
			<if test="informRepairDate != null">
				#{informRepairDate,jdbcType=TIMESTAMP},
			</if>
			<if test="repairMode != null">
				#{repairMode,jdbcType=VARCHAR},
			</if>
			<if test="moveMode != null">
				#{moveMode,jdbcType=VARCHAR},
			</if>
			<if test="chargeFluorineNum != null">
				#{chargeFluorineNum,jdbcType=VARCHAR},
			</if>
			<if test="distanceApplyNum != null">
				#{distanceApplyNum,jdbcType=VARCHAR},
			</if>
			<if test="servicePattern != null">
				#{servicePattern,jdbcType=VARCHAR},
			</if>
			<if test="serviceCardNum != null">
				#{serviceCardNum,jdbcType=VARCHAR},
			</if>
			<if test="serviceMan != null">
				#{serviceMan,jdbcType=VARCHAR},
			</if>
			<if test="serviceDate != null">
				#{serviceDate,jdbcType=TIMESTAMP},
			</if>
			<if test="trafficFee != null">
				#{trafficFee,jdbcType=REAL},
			</if>
			<if test="delayFee != null">
				#{delayFee,jdbcType=REAL},
			</if>
			<if test="otherFee != null">
				#{otherFee,jdbcType=REAL},
			</if>
			<if test="productExteriorSatisfaction != null">
				#{productExteriorSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="productExteriorSignificance != null">
				#{productExteriorSignificance,jdbcType=VARCHAR},
			</if>
			<if test="priceSatisfaction != null">
				#{priceSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="priceSignificance != null">
				#{priceSignificance,jdbcType=VARCHAR},
			</if>
			<if test="serviceSatisfaction != null">
				#{serviceSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="serviceSignificance != null">
				#{serviceSignificance,jdbcType=VARCHAR},
			</if>
			<if test="qualitySatisfaction != null">
				#{qualitySatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="qualitySignificance != null">
				#{qualitySignificance,jdbcType=VARCHAR},
			</if>
			<if test="physiologySatisfaction != null">
				#{physiologySatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="physiologySignificance != null">
				#{physiologySignificance,jdbcType=VARCHAR},
			</if>
			<if test="customerSatisfaction != null">
				#{customerSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="warrantyPolicy != null">
				#{warrantyPolicy,jdbcType=VARCHAR},
			</if>
			<if test="isReplaceParts != null">
				#{isReplaceParts,jdbcType=BIT},
			</if>
			<if test="manulNum != null">
				#{manulNum,jdbcType=VARCHAR},
			</if>
			<if test="isDoubleInstall != null">
				#{isDoubleInstall,jdbcType=BIT},
			</if>
			<if test="inputTime != null">
				#{inputTime,jdbcType=TIMESTAMP},
			</if>
			<if test="appointmentInstallDate != null">
				#{appointmentInstallDate,jdbcType=TIMESTAMP},
			</if>
			<if test="moveAddress != null">
				#{moveAddress,jdbcType=VARCHAR},
			</if>
			<if test="machineCheckFaultReason != null">
				#{machineCheckFaultReason,jdbcType=VARCHAR},
			</if>
			<if test="centerCheckTrafficFee != null">
				#{centerCheckTrafficFee,jdbcType=REAL},
			</if>
			<if test="centerCheckDelayFee != null">
				#{centerCheckDelayFee,jdbcType=REAL},
			</if>
			<if test="centerCheckOtherFee != null">
				#{centerCheckOtherFee,jdbcType=REAL},
			</if>
			<if test="centerCheckMan != null">
				#{centerCheckMan,jdbcType=VARCHAR},
			</if>
			<if test="centerCheckTime != null">
				#{centerCheckTime,jdbcType=TIMESTAMP},
			</if>
			<if test="centerCheckResult != null">
				#{centerCheckResult,jdbcType=VARCHAR},
			</if>
			<if test="centerCheckComment != null">
				#{centerCheckComment,jdbcType=VARCHAR},
			</if>
			<if test="headquartersCheckTrafficFee != null">
				#{headquartersCheckTrafficFee,jdbcType=REAL},
			</if>
			<if test="headquartersCheckDelayFee != null">
				#{headquartersCheckDelayFee,jdbcType=REAL},
			</if>
			<if test="headquartersCheckOtherFee != null">
				#{headquartersCheckOtherFee,jdbcType=REAL},
			</if>
			<if test="headquartersCheckMan != null">
				#{headquartersCheckMan,jdbcType=VARCHAR},
			</if>
			<if test="headquartersCheckTime != null">
				#{headquartersCheckTime,jdbcType=TIMESTAMP},
			</if>
			<if test="headquartersCheckResult != null">
				#{headquartersCheckResult,jdbcType=VARCHAR},
			</if>
			<if test="headquartersCheckComment != null">
				#{headquartersCheckComment,jdbcType=VARCHAR},
			</if>
			<if test="checkResult != null">
				#{checkResult,jdbcType=VARCHAR},
			</if>
			<if test="recallMan != null">
				#{recallMan,jdbcType=VARCHAR},
			</if>
			<if test="recallResult != null">
				#{recallResult,jdbcType=VARCHAR},
			</if>
			<if test="recallTime != null">
				#{recallTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isClear != null">
				#{isClear,jdbcType=BIT},
			</if>
			<if test="serviceStatus != null">
				#{serviceStatus,jdbcType=VARCHAR},
			</if>
			<if test="center != null">
				#{center,jdbcType=VARCHAR},
			</if>
			<if test="website != null">
				#{website,jdbcType=VARCHAR},
			</if>
			<if test="commentS != null">
				#{commentS,jdbcType=VARCHAR},
			</if>
			<if test="createManS != null">
				#{createManS,jdbcType=VARCHAR},
			</if>
			<if test="createOrganizationS != null">
				#{createOrganizationS,jdbcType=VARCHAR},
			</if>
			<if test="createTimeS != null">
				#{createTimeS,jdbcType=TIMESTAMP},
			</if>
			<if test="alterManS != null">
				#{alterManS,jdbcType=VARCHAR},
			</if>
			<if test="alterOrganizationS != null">
				#{alterOrganizationS,jdbcType=VARCHAR},
			</if>
			<if test="alterTimeS != null">
				#{alterTimeS,jdbcType=TIMESTAMP},
			</if>
			<if test="processInstanceId != null">
				#{processInstanceId,jdbcType=VARCHAR},
			</if>
			<if test="applicant != null">
				#{applicant,jdbcType=VARCHAR},
			</if>
			<if test="applyDate != null">
				#{applyDate,jdbcType=TIMESTAMP},
			</if>
			<if test="serviceUnit != null">
				#{serviceUnit,jdbcType=VARCHAR},
			</if>
			<if test="createPosition != null">
				#{createPosition,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateServiceTicketEffective" parameterType="java.lang.String">
		update hx_service_ticket
		set is_pass_check = '1'
		where service_id = #{serviceId,jdbcType=VARCHAR}
	</update>
	<update id="updateServiceTicketToFinish" parameterType="java.lang.String">
		update hx_service_ticket
		set service_status = "09"
		where service_id = #{serviceId,jdbcType=VARCHAR}
	</update>
	<update id="affirmServiceTicketByPrimaryKey" parameterType="java.lang.String">
		update hx_service_ticket
		set service_status = "05"
		where service_id = #{serviceId,jdbcType=VARCHAR}
	</update>
	<update id="updateServiceTicket" parameterType="map">
		update hx_service_ticket
		<set>
			<if test="record.serviceId != null">
				service_id = #{record.serviceId,jdbcType=VARCHAR},
			</if>
			<if test="record.customerId != null">
				customer_id = #{record.customerId,jdbcType=VARCHAR},
			</if>
			<if test="record.productId != null">
				product_id = #{record.productId,jdbcType=VARCHAR},
			</if>
			<if test="record.sequence != null">
				sequence = #{record.sequence,jdbcType=INTEGER},
			</if>
			<if test="record.category != null">
				category = #{record.category,jdbcType=VARCHAR},
			</if>
			<if test="record.serviceType != null">
				service_type = #{record.serviceType,jdbcType=VARCHAR},
			</if>
			<if test="record.linkMan != null">
				link_man = #{record.linkMan,jdbcType=VARCHAR},
			</if>
			<if test="record.linkPhone != null">
				link_phone = #{record.linkPhone,jdbcType=VARCHAR},
			</if>
			<if test="record.appointmentDate != null">
				appointment_date = #{record.appointmentDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.appointmentQuantum != null">
				appointment_quantum = #{record.appointmentQuantum,jdbcType=VARCHAR},
			</if>
			<if test="record.urgencyDegree != null">
				urgency_degree = #{record.urgencyDegree,jdbcType=VARCHAR},
			</if>
			<if test="record.dispatchInfo != null">
				dispatch_info = #{record.dispatchInfo,jdbcType=VARCHAR},
			</if>
			<if test="record.customerDescribe != null">
				customer_describe = #{record.customerDescribe,jdbcType=VARCHAR},
			</if>
			<if test="record.informRepairDate != null">
				inform_repair_date = #{record.informRepairDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.repairMode != null">
				repair_mode = #{record.repairMode,jdbcType=VARCHAR},
			</if>
			<if test="record.moveMode != null">
				move_mode = #{record.moveMode,jdbcType=VARCHAR},
			</if>
			<if test="record.chargeFluorineNum != null">
				charge_fluorine_num = #{record.chargeFluorineNum,jdbcType=VARCHAR},
			</if>
			<if test="record.distanceApplyNum != null">
				distance_apply_num = #{record.distanceApplyNum,jdbcType=VARCHAR},
			</if>
			<if test="record.servicePattern != null">
				service_pattern = #{record.servicePattern,jdbcType=VARCHAR},
			</if>
			<if test="record.serviceCardNum != null">
				service_card_num = #{record.serviceCardNum,jdbcType=VARCHAR},
			</if>
			<if test="record.serviceMan != null">
				service_man = #{record.serviceMan,jdbcType=VARCHAR},
			</if>
			<if test="record.serviceDate != null">
				service_date = #{record.serviceDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.trafficFee != null">
				traffic_fee = #{record.trafficFee,jdbcType=REAL},
			</if>
			<if test="record.delayFee != null">
				delay_fee = #{record.delayFee,jdbcType=REAL},
			</if>
			<if test="record.otherFee != null">
				other_fee = #{record.otherFee,jdbcType=REAL},
			</if>
			<if test="record.productExteriorSatisfaction != null">
				product_exterior_satisfaction =
				#{record.productExteriorSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="record.productExteriorSignificance != null">
				product_exterior_significance =
				#{record.productExteriorSignificance,jdbcType=VARCHAR},
			</if>
			<if test="record.priceSatisfaction != null">
				price_satisfaction = #{record.priceSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="record.priceSignificance != null">
				price_significance = #{record.priceSignificance,jdbcType=VARCHAR},
			</if>
			<if test="record.serviceSatisfaction != null">
				service_satisfaction =
				#{record.serviceSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="record.serviceSignificance != null">
				service_significance =
				#{record.serviceSignificance,jdbcType=VARCHAR},
			</if>
			<if test="record.qualitySatisfaction != null">
				quality_satisfaction =
				#{record.qualitySatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="record.qualitySignificance != null">
				quality_significance =
				#{record.qualitySignificance,jdbcType=VARCHAR},
			</if>
			<if test="record.physiologySatisfaction != null">
				physiology_satisfaction =
				#{record.physiologySatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="record.physiologySignificance != null">
				physiology_significance =
				#{record.physiologySignificance,jdbcType=VARCHAR},
			</if>
			<if test="record.customerSatisfaction != null">
				customer_satisfaction =
				#{record.customerSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="record.warrantyPolicy != null">
				warranty_policy = #{record.warrantyPolicy,jdbcType=VARCHAR},
			</if>
			<if test="record.isReplaceParts != null">
				is_replace_parts = #{record.isReplaceParts,jdbcType=BIT},
			</if>
			<if test="record.manulNum != null">
				manul_num = #{record.manulNum,jdbcType=VARCHAR},
			</if>
			<if test="record.isDoubleInstall != null">
				is_double_install = #{record.isDoubleInstall,jdbcType=BIT},
			</if>
			<if test="record.inputTime != null">
				input_time = #{record.inputTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.appointmentInstallDate != null">
				appointment_install_date =
				#{record.appointmentInstallDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.moveAddress != null">
				move_address = #{record.moveAddress,jdbcType=VARCHAR},
			</if>
			<if test="record.machineCheckFaultReason != null">
				machine_check_fault_reason =
				#{record.machineCheckFaultReason,jdbcType=VARCHAR},
			</if>
			<if test="record.centerCheckTrafficFee != null">
				center_check_traffic_fee =
				#{record.centerCheckTrafficFee,jdbcType=REAL},
			</if>
			<if test="record.centerCheckDelayFee != null">
				center_check_delay_fee =
				#{record.centerCheckDelayFee,jdbcType=REAL},
			</if>
			<if test="record.centerCheckOtherFee != null">
				center_check_other_fee =
				#{record.centerCheckOtherFee,jdbcType=REAL},
			</if>
			<if test="record.centerCheckMan != null">
				center_check_man = #{record.centerCheckMan,jdbcType=VARCHAR},
			</if>
			<if test="record.centerCheckTime != null">
				center_check_time = #{record.centerCheckTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.centerCheckResult != null">
				center_check_result = #{record.centerCheckResult,jdbcType=VARCHAR},
			</if>
			<if test="record.centerCheckComment != null">
				center_check_comment = #{record.centerCheckComment,jdbcType=VARCHAR},
			</if>
			<if test="record.headquartersCheckTrafficFee != null">
				headquarters_check_traffic_fee =
				#{record.headquartersCheckTrafficFee,jdbcType=REAL},
			</if>
			<if test="record.headquartersCheckDelayFee != null">
				headquarters_check_delay_fee =
				#{record.headquartersCheckDelayFee,jdbcType=REAL},
			</if>
			<if test="record.headquartersCheckOtherFee != null">
				headquarters_check_other_fee =
				#{record.headquartersCheckOtherFee,jdbcType=REAL},
			</if>
			<if test="record.headquartersCheckMan != null">
				headquarters_check_man =
				#{record.headquartersCheckMan,jdbcType=VARCHAR},
			</if>
			<if test="record.headquartersCheckTime != null">
				headquarters_check_time =
				#{record.headquartersCheckTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.headquartersCheckResult != null">
				headquarters_check_result =
				#{record.headquartersCheckResult,jdbcType=VARCHAR},
			</if>
			<if test="record.headquartersCheckComment != null">
				headquarters_check_comment =
				#{record.headquartersCheckComment,jdbcType=VARCHAR},
			</if>
			<if test="record.checkResult != null">
				check_result = #{record.checkResult,jdbcType=VARCHAR},
			</if>
			<if test="record.recallMan != null">
				recall_man = #{record.recallMan,jdbcType=VARCHAR},
			</if>
			<if test="record.recallResult != null">
				recall_result = #{record.recallResult,jdbcType=VARCHAR},
			</if>
			<if test="record.recallTime != null">
				recall_time = #{record.recallTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.isClear != null">
				is_clear = #{record.isClear,jdbcType=BIT},
			</if>
			<if test="record.serviceStatus != null">
				service_status = #{record.serviceStatus,jdbcType=VARCHAR},
			</if>
			<if test="record.center != null">
				center = #{record.center,jdbcType=VARCHAR},
			</if>
			<if test="record.website != null">
				website = #{record.website,jdbcType=VARCHAR},
			</if>
			<if test="record.commentS != null">
				comment_s = #{record.commentS,jdbcType=VARCHAR},
			</if>
			<if test="record.createManS != null">
				create_man_s = #{record.createManS,jdbcType=VARCHAR},
			</if>
			<if test="record.createOrganizationS != null">
				create_organization_s =
				#{record.createOrganizationS,jdbcType=VARCHAR},
			</if>
			<if test="record.createTimeS != null">
				create_time_s = #{record.createTimeS,jdbcType=TIMESTAMP},
			</if>
			<if test="record.alterManS != null">
				alter_man_s = #{record.alterManS,jdbcType=VARCHAR},
			</if>
			<if test="record.alterOrganizationS != null">
				alter_organization_s = #{record.alterOrganizationS,jdbcType=VARCHAR},
			</if>
			<if test="record.alterTimeS != null">
				alter_time_s = #{record.alterTimeS,jdbcType=TIMESTAMP},
			</if>
			<if test="record.processInstanceId != null">
				process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
			</if>
			<if test="record.applicant != null">
				applicant = #{record.applicant,jdbcType=VARCHAR},
			</if>
			<if test="record.applyDate != null">
				apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.serviceUnit != null">
				apply_date = #{record.serviceUnit,jdbcType=VARCHAR},
			</if>
			<if test="record.serviceUnit != null">
				apply_date = #{record.serviceUnit,jdbcType=VARCHAR},
			</if>
			<if test="record.createPosition != null">
				create_position = #{record.createPosition,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon Sep 15 
			09:44:00 CST 2014. -->
		update hx_service_ticket
		set service_id = #{record.serviceId,jdbcType=VARCHAR},
		customer_id = #{record.customerId,jdbcType=VARCHAR},
		product_id = #{record.productId,jdbcType=VARCHAR},
		sequence = #{record.sequence,jdbcType=INTEGER},
		category = #{record.category,jdbcType=VARCHAR},
		service_type = #{record.serviceType,jdbcType=VARCHAR},
		link_man = #{record.linkMan,jdbcType=VARCHAR},
		link_phone = #{record.linkPhone,jdbcType=VARCHAR},
		appointment_date = #{record.appointmentDate,jdbcType=TIMESTAMP},
		appointment_quantum = #{record.appointmentQuantum,jdbcType=VARCHAR},
		urgency_degree = #{record.urgencyDegree,jdbcType=VARCHAR},
		dispatch_info = #{record.dispatchInfo,jdbcType=VARCHAR},
		customer_describe = #{record.customerDescribe,jdbcType=VARCHAR},
		inform_repair_date = #{record.informRepairDate,jdbcType=TIMESTAMP},
		repair_mode = #{record.repairMode,jdbcType=VARCHAR},
		move_mode = #{record.moveMode,jdbcType=VARCHAR},
		charge_fluorine_num = #{record.chargeFluorineNum,jdbcType=VARCHAR},
		distance_apply_num = #{record.distanceApplyNum,jdbcType=VARCHAR},
		service_pattern = #{record.servicePattern,jdbcType=VARCHAR},
		service_card_num = #{record.serviceCardNum,jdbcType=VARCHAR},
		service_man = #{record.serviceMan,jdbcType=VARCHAR},
		service_date = #{record.serviceDate,jdbcType=TIMESTAMP},
		traffic_fee = #{record.trafficFee,jdbcType=REAL},
		delay_fee = #{record.delayFee,jdbcType=REAL},
		other_fee = #{record.otherFee,jdbcType=REAL},
		product_exterior_satisfaction = #{record.productExteriorSatisfaction,jdbcType=VARCHAR},
		product_exterior_significance =
		#{record.productExteriorSignificance,jdbcType=VARCHAR},
		price_satisfaction = #{record.priceSatisfaction,jdbcType=VARCHAR},
		price_significance = #{record.priceSignificance,jdbcType=VARCHAR},
		service_satisfaction = #{record.serviceSatisfaction,jdbcType=VARCHAR},
		service_significance = #{record.serviceSignificance,jdbcType=VARCHAR},
		quality_satisfaction = #{record.qualitySatisfaction,jdbcType=VARCHAR},
		quality_significance = #{record.qualitySignificance,jdbcType=VARCHAR},
		physiology_satisfaction =
		#{record.physiologySatisfaction,jdbcType=VARCHAR},
		physiology_significance =
		#{record.physiologySignificance,jdbcType=VARCHAR},
		customer_satisfaction =
		#{record.customerSatisfaction,jdbcType=VARCHAR},
		warranty_policy = #{record.warrantyPolicy,jdbcType=VARCHAR},
		is_replace_parts = #{record.isReplaceParts,jdbcType=BIT},
		manul_num = #{record.manulNum,jdbcType=VARCHAR},
		is_double_install = #{record.isDoubleInstall,jdbcType=BIT},
		input_time = #{record.inputTime,jdbcType=TIMESTAMP},
		appointment_install_date = #{record.appointmentInstallDate,jdbcType=TIMESTAMP},
		move_address = #{record.moveAddress,jdbcType=VARCHAR},
		machine_check_fault_reason = #{record.machineCheckFaultReason,jdbcType=VARCHAR},
		center_check_traffic_fee =
		#{record.centerCheckTrafficFee,jdbcType=REAL},
		center_check_delay_fee = #{record.centerCheckDelayFee,jdbcType=REAL},
		center_check_other_fee = #{record.centerCheckOtherFee,jdbcType=REAL},
		center_check_man = #{record.centerCheckMan,jdbcType=VARCHAR},
		center_check_time = #{record.centerCheckTime,jdbcType=TIMESTAMP},
		center_check_result = #{record.centerCheckResult,jdbcType=VARCHAR},
		center_check_comment = #{record.centerCheckComment,jdbcType=VARCHAR},
		headquarters_check_traffic_fee =
		#{record.headquartersCheckTrafficFee,jdbcType=REAL},
		headquarters_check_delay_fee =
		#{record.headquartersCheckDelayFee,jdbcType=REAL},
		headquarters_check_other_fee =
		#{record.headquartersCheckOtherFee,jdbcType=REAL},
		headquarters_check_man =
		#{record.headquartersCheckMan,jdbcType=VARCHAR},
		headquarters_check_time =
		#{record.headquartersCheckTime,jdbcType=TIMESTAMP},
		headquarters_check_result =
		#{record.headquartersCheckResult,jdbcType=VARCHAR},
		headquarters_check_comment =
		#{record.headquartersCheckComment,jdbcType=VARCHAR},
		check_result = #{record.checkResult,jdbcType=VARCHAR},
		recall_man = #{record.recallMan,jdbcType=VARCHAR},
		recall_result = #{record.recallResult,jdbcType=VARCHAR},
		recall_time = #{record.recallTime,jdbcType=TIMESTAMP},
		is_clear = #{record.isClear,jdbcType=BIT},
		service_status = #{record.serviceStatus,jdbcType=VARCHAR},
		center = #{record.center,jdbcType=VARCHAR},
		website = #{record.website,jdbcType=VARCHAR},
		comment_s = #{record.commentS,jdbcType=VARCHAR},
		create_man_s = #{record.createManS,jdbcType=VARCHAR},
		create_organization_s = #{record.createOrganizationS,jdbcType=VARCHAR},
		create_time_s = #{record.createTimeS,jdbcType=TIMESTAMP},
		alter_man_s = #{record.alterManS,jdbcType=VARCHAR},
		alter_organization_s = #{record.alterOrganizationS,jdbcType=VARCHAR},
		alter_time_s = #{record.alterTimeS,jdbcType=TIMESTAMP},
		process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
		applicant = #{record.applicant,jdbcType=VARCHAR},
		apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
		service_unit = #{record.serviceUnit,jdbcType=VARCHAR}]
		create_position = #{record.createPosition,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateServiceTicketByPrimaryKeySelective"
		parameterType="com.gome.gmhx.entity.HxServiceTicket">
		update hx_service_ticket
		<set>
			<if test="jlServiceId != null">
				jl_service_id = #{jlServiceId,jdbcType=VARCHAR},
			</if>
			<if test="customerId != null">
				customer_id = #{customerId,jdbcType=VARCHAR},
			</if>
			<if test="productId != null">
				product_id = #{productId,jdbcType=VARCHAR},
			</if>
			<if test="sequence != null">
				sequence = #{sequence,jdbcType=INTEGER},
			</if>
			<if test="category != null">
				category = #{category,jdbcType=VARCHAR},
			</if>
			<if test="dataFrom != null">
				data_from = #{dataFrom,jdbcType=REAL},
			</if>
			<if test="serviceType != null">
				service_type = #{serviceType,jdbcType=VARCHAR},
			</if>
			<if test="linkMan != null">
				link_man = #{linkMan,jdbcType=VARCHAR},
			</if>
			<if test="linkPhone != null">
				link_phone = #{linkPhone,jdbcType=VARCHAR},
			</if>
			<if test="appointmentDate != null">
				appointment_date = #{appointmentDate,jdbcType=TIMESTAMP},
			</if>
			<if test="appointmentQuantum != null">
				appointment_quantum = #{appointmentQuantum,jdbcType=VARCHAR},
			</if>
			<if test="urgencyDegree != null">
				urgency_degree = #{urgencyDegree,jdbcType=VARCHAR},
			</if>
			<if test="dispatchInfo != null">
				dispatch_info = #{dispatchInfo,jdbcType=VARCHAR},
			</if>
			<if test="customerDescribe != null">
				customer_describe = #{customerDescribe,jdbcType=VARCHAR},
			</if>
			<if test="informRepairDate != null">
				inform_repair_date = #{informRepairDate,jdbcType=TIMESTAMP},
			</if>
			<if test="repairMode != null">
				repair_mode = #{repairMode,jdbcType=VARCHAR},
			</if>
			<if test="moveMode != null">
				move_mode = #{moveMode,jdbcType=VARCHAR},
			</if>
			<if test="chargeFluorineNum != null">
				charge_fluorine_num = #{chargeFluorineNum,jdbcType=VARCHAR},
			</if>
			<if test="distanceApplyNum != null">
				distance_apply_num = #{distanceApplyNum,jdbcType=VARCHAR},
			</if>
			<if test="servicePattern != null">
				service_pattern = #{servicePattern,jdbcType=VARCHAR},
			</if>
			<if test="serviceCardNum != null">
				service_card_num = #{serviceCardNum,jdbcType=VARCHAR},
			</if>
			<if test="serviceMan != null">
				service_man = #{serviceMan,jdbcType=VARCHAR},
			</if>
			<if test="serviceDate != null">
				service_date = #{serviceDate,jdbcType=TIMESTAMP},
			</if>
			<if test="trafficFee != null">
				traffic_fee = #{trafficFee,jdbcType=REAL},
			</if>
			<if test="delayFee != null">
				delay_fee = #{delayFee,jdbcType=REAL},
			</if>
			<if test="otherFee != null">
				other_fee = #{otherFee,jdbcType=REAL},
			</if>
			<if test="productExteriorSatisfaction != null">
				product_exterior_satisfaction =
				#{productExteriorSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="productExteriorSignificance != null">
				product_exterior_significance =
				#{productExteriorSignificance,jdbcType=VARCHAR},
			</if>
			<if test="priceSatisfaction != null">
				price_satisfaction = #{priceSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="priceSignificance != null">
				price_significance = #{priceSignificance,jdbcType=VARCHAR},
			</if>
			<if test="serviceSatisfaction != null">
				service_satisfaction = #{serviceSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="serviceSignificance != null">
				service_significance = #{serviceSignificance,jdbcType=VARCHAR},
			</if>
			<if test="qualitySatisfaction != null">
				quality_satisfaction = #{qualitySatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="qualitySignificance != null">
				quality_significance = #{qualitySignificance,jdbcType=VARCHAR},
			</if>
			<if test="physiologySatisfaction != null">
				physiology_satisfaction = #{physiologySatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="physiologySignificance != null">
				physiology_significance = #{physiologySignificance,jdbcType=VARCHAR},
			</if>
			<if test="customerSatisfaction != null">
				customer_satisfaction = #{customerSatisfaction,jdbcType=VARCHAR},
			</if>
			<if test="warrantyPolicy != null">
				warranty_policy = #{warrantyPolicy,jdbcType=VARCHAR},
			</if>
			<if test="isReplaceParts != null">
				is_replace_parts = #{isReplaceParts,jdbcType=BIT},
			</if>
			<if test="manulNum != null">
				manul_num = #{manulNum,jdbcType=VARCHAR},
			</if>
			<if test="isDoubleInstall != null">
				is_double_install = #{isDoubleInstall,jdbcType=VARCHAR},
			</if>
			<if test="inputTime != null">
				input_time = #{inputTime,jdbcType=TIMESTAMP},
			</if>
			<if test="appointmentInstallDate != null">
				appointment_install_date =
				#{appointmentInstallDate,jdbcType=TIMESTAMP},
			</if>
			<if test="moveAddress != null">
				move_address = #{moveAddress,jdbcType=VARCHAR},
			</if>
			<if test="machineCheckFaultReason != null">
				machine_check_fault_reason =
				#{machineCheckFaultReason,jdbcType=VARCHAR},
			</if>
			<if test="centerCheckTrafficFee != null">
				center_check_traffic_fee = #{centerCheckTrafficFee,jdbcType=REAL},
			</if>
			<if test="centerCheckDelayFee != null">
				center_check_delay_fee = #{centerCheckDelayFee,jdbcType=REAL},
			</if>
			<if test="centerCheckOtherFee != null">
				center_check_other_fee = #{centerCheckOtherFee,jdbcType=REAL},
			</if>
			<if test="centerCheckMan != null">
				center_check_man = #{centerCheckMan,jdbcType=VARCHAR},
			</if>
			<if test="centerCheckTime != null">
				center_check_time = #{centerCheckTime,jdbcType=TIMESTAMP},
			</if>
			<if test="centerCheckResult != null">
				center_check_result = #{centerCheckResult,jdbcType=VARCHAR},
			</if>
			<if test="centerCheckComment != null">
				center_check_comment = #{centerCheckComment,jdbcType=VARCHAR},
			</if>
			<if test="headquartersCheckTrafficFee != null">
				headquarters_check_traffic_fee =
				#{headquartersCheckTrafficFee,jdbcType=REAL},
			</if>
			<if test="headquartersCheckDelayFee != null">
				headquarters_check_delay_fee =
				#{headquartersCheckDelayFee,jdbcType=REAL},
			</if>
			<if test="headquartersCheckOtherFee != null">
				headquarters_check_other_fee =
				#{headquartersCheckOtherFee,jdbcType=REAL},
			</if>
			<if test="headquartersCheckMan != null">
				headquarters_check_man = #{headquartersCheckMan,jdbcType=VARCHAR},
			</if>
			<if test="headquartersCheckTime != null">
				headquarters_check_time = #{headquartersCheckTime,jdbcType=TIMESTAMP},
			</if>
			<if test="headquartersCheckResult != null">
				headquarters_check_result =
				#{headquartersCheckResult,jdbcType=VARCHAR},
			</if>
			<if test="headquartersCheckComment != null">
				headquarters_check_comment =
				#{headquartersCheckComment,jdbcType=VARCHAR},
			</if>
			<if test="checkResult != null">
				check_result = #{checkResult,jdbcType=VARCHAR},
			</if>
			<if test="recallMan != null">
				recall_man = #{recallMan,jdbcType=VARCHAR},
			</if>
			<if test="recallResult != null">
				recall_result = #{recallResult,jdbcType=VARCHAR},
			</if>
			<if test="recallTime != null">
				recall_time = #{recallTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isClear != null">
				is_clear = #{isClear,jdbcType=BIT},
			</if>
			<if test="serviceStatus != null">
				service_status = #{serviceStatus,jdbcType=VARCHAR},
			</if>
			<if test="center != null">
				center = #{center,jdbcType=VARCHAR},
			</if>
			<if test="website != null">
				website = #{website,jdbcType=VARCHAR},
			</if>
			<if test="commentS != null">
				comment_s = #{commentS,jdbcType=VARCHAR},
			</if>
			<if test="createManS != null">
				create_man_s = #{createManS,jdbcType=VARCHAR},
			</if>
			<if test="createOrganizationS != null">
				create_organization_s = #{createOrganizationS,jdbcType=VARCHAR},
			</if>
			<if test="createTimeS != null">
				create_time_s = #{createTimeS,jdbcType=TIMESTAMP},
			</if>
			<if test="alterManS != null">
				alter_man_s = #{alterManS,jdbcType=VARCHAR},
			</if>
			<if test="alterOrganizationS != null">
				alter_organization_s = #{alterOrganizationS,jdbcType=VARCHAR},
			</if>
			<if test="alterTimeS != null">
				alter_time_s = #{alterTimeS,jdbcType=TIMESTAMP},
			</if>
			<if test="processInstanceId != null">
				process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
			</if>
			<if test="applicant != null">
				applicant = #{applicant,jdbcType=VARCHAR},
			</if>
			<if test="applyDate != null">
				apply_date = #{applyDate,jdbcType=TIMESTAMP},
			</if>
			<if test="serviceUnit != null">
				service_unit = #{serviceUnit,jdbcType=VARCHAR},
			</if>
			<if test="createPosition != null">
				create_position = #{createPosition,jdbcType=VARCHAR},
			</if>
			<if test="isPassCheck != null">
				is_pass_check = #{isPassCheck,jdbcType=BIT},
			</if>
		</set>
		where service_id = #{serviceId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gome.gmhx.entity.HxServiceTicket">
		update hx_service_ticket
		set customer_id = #{customerId,jdbcType=VARCHAR},
		product_id = #{productId,jdbcType=VARCHAR},
		sequence = #{sequence,jdbcType=INTEGER},
		category = #{category,jdbcType=VARCHAR},
		service_type = #{serviceType,jdbcType=VARCHAR},
		link_man = #{linkMan,jdbcType=VARCHAR},
		link_phone = #{linkPhone,jdbcType=VARCHAR},
		appointment_date = #{appointmentDate,jdbcType=TIMESTAMP},
		appointment_quantum = #{appointmentQuantum,jdbcType=VARCHAR},
		urgency_degree = #{urgencyDegree,jdbcType=VARCHAR},
		dispatch_info = #{dispatchInfo,jdbcType=VARCHAR},
		customer_describe = #{customerDescribe,jdbcType=VARCHAR},
		inform_repair_date = #{informRepairDate,jdbcType=TIMESTAMP},
		repair_mode = #{repairMode,jdbcType=VARCHAR},
		move_mode = #{moveMode,jdbcType=VARCHAR},
		charge_fluorine_num = #{chargeFluorineNum,jdbcType=VARCHAR},
		distance_apply_num = #{distanceApplyNum,jdbcType=VARCHAR},
		service_pattern = #{servicePattern,jdbcType=VARCHAR},
		service_card_num = #{serviceCardNum,jdbcType=VARCHAR},
		service_man = #{serviceMan,jdbcType=VARCHAR},
		service_date = #{serviceDate,jdbcType=TIMESTAMP},
		traffic_fee = #{trafficFee,jdbcType=REAL},
		delay_fee = #{delayFee,jdbcType=REAL},
		other_fee = #{otherFee,jdbcType=REAL},
		product_exterior_satisfaction = #{productExteriorSatisfaction,jdbcType=VARCHAR},
		product_exterior_significance =
		#{productExteriorSignificance,jdbcType=VARCHAR},
		price_satisfaction = #{priceSatisfaction,jdbcType=VARCHAR},
		price_significance = #{priceSignificance,jdbcType=VARCHAR},
		service_satisfaction = #{serviceSatisfaction,jdbcType=VARCHAR},
		service_significance = #{serviceSignificance,jdbcType=VARCHAR},
		quality_satisfaction = #{qualitySatisfaction,jdbcType=VARCHAR},
		quality_significance = #{qualitySignificance,jdbcType=VARCHAR},
		physiology_satisfaction = #{physiologySatisfaction,jdbcType=VARCHAR},
		physiology_significance = #{physiologySignificance,jdbcType=VARCHAR},
		customer_satisfaction = #{customerSatisfaction,jdbcType=VARCHAR},
		warranty_policy = #{warrantyPolicy,jdbcType=VARCHAR},
		is_replace_parts = #{isReplaceParts,jdbcType=BIT},
		manul_num = #{manulNum,jdbcType=VARCHAR},
		is_double_install = #{isDoubleInstall,jdbcType=BIT},
		input_time = #{inputTime,jdbcType=TIMESTAMP},
		appointment_install_date = #{appointmentInstallDate,jdbcType=TIMESTAMP},
		move_address = #{moveAddress,jdbcType=VARCHAR},
		machine_check_fault_reason = #{machineCheckFaultReason,jdbcType=VARCHAR},
		center_check_traffic_fee = #{centerCheckTrafficFee,jdbcType=REAL},
		center_check_delay_fee = #{centerCheckDelayFee,jdbcType=REAL},
		center_check_other_fee = #{centerCheckOtherFee,jdbcType=REAL},
		center_check_man = #{centerCheckMan,jdbcType=VARCHAR},
		center_check_time = #{centerCheckTime,jdbcType=TIMESTAMP},
		center_check_result = #{centerCheckResult,jdbcType=VARCHAR},
		center_check_comment = #{centerCheckComment,jdbcType=VARCHAR},
		headquarters_check_traffic_fee =
		#{headquartersCheckTrafficFee,jdbcType=REAL},
		headquarters_check_delay_fee =
		#{headquartersCheckDelayFee,jdbcType=REAL},
		headquarters_check_other_fee =
		#{headquartersCheckOtherFee,jdbcType=REAL},
		headquarters_check_man = #{headquartersCheckMan,jdbcType=VARCHAR},
		headquarters_check_time = #{headquartersCheckTime,jdbcType=TIMESTAMP},
		headquarters_check_result =
		#{headquartersCheckResult,jdbcType=VARCHAR},
		headquarters_check_comment =
		#{headquartersCheckComment,jdbcType=VARCHAR},
		check_result = #{checkResult,jdbcType=VARCHAR},
		recall_man = #{recallMan,jdbcType=VARCHAR},
		recall_result = #{recallResult,jdbcType=VARCHAR},
		recall_time = #{recallTime,jdbcType=TIMESTAMP},
		is_clear = #{isClear,jdbcType=BIT},
		service_status = #{serviceStatus,jdbcType=VARCHAR},
		center = #{center,jdbcType=VARCHAR},
		website = #{website,jdbcType=VARCHAR},
		comment_s = #{commentS,jdbcType=VARCHAR},
		create_man_s = #{createManS,jdbcType=VARCHAR},
		create_organization_s = #{createOrganizationS,jdbcType=VARCHAR},
		create_time_s = #{createTimeS,jdbcType=TIMESTAMP},
		alter_man_s = #{alterManS,jdbcType=VARCHAR},
		alter_organization_s = #{alterOrganizationS,jdbcType=VARCHAR},
		alter_time_s = #{alterTimeS,jdbcType=TIMESTAMP},
		process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
		applicant = #{applicant,jdbcType=VARCHAR},
		apply_date = #{applyDate,jdbcType=TIMESTAMP},
		service_unit = #{serviceUnit,jdbcType=VARCHAR},
		create_position = #{createPosition,jdbcType=VARCHAR},
		where service_id = #{serviceId,jdbcType=VARCHAR}
	</update>
	<sql id="MySqlDialectPage">
		<if test="page != null">
      <![CDATA[ limit  #{page.begin} , #{page.end} ]]>
		</if>
	</sql>

	<select id="getServiceTicketByServiceId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select * from hx_service_ticket where service_id =
		#{serviceId,jdbcType=VARCHAR}
	</select>
	
	<select id="getServiceTicketCounts" parameterType="java.lang.String" resultType="integer">
		SELECT COUNT(*) FROM hx_service_ticket 
		WHERE product_id IN(SELECT product_id FROM hx_service_product 
		WHERE 1=1
		<if test="param1 != null and param1!=''">
 			AND internal_machine_code1 = #{param1,jdbcType=VARCHAR}
		</if>
		
		<if test="param2 != null and param2!=''">
			AND internal_machine_code2 = #{param2,jdbcType=VARCHAR}
		</if>
		<if test="param3 != null and param3!=''">
			AND external_machine_code = #{param3,jdbcType=VARCHAR}
		</if>
		)
		AND service_type = "01"
		GROUP BY service_id
	</select>
	
	<select id="getServiceTicketCount" parameterType="java.lang.String" resultType="integer">
		SELECT COUNT(*) FROM hx_service_ticket 
		WHERE product_id IN(SELECT product_id FROM hx_service_product 
		WHERE machine_code = #{_prarm,jdbcType=VARCHAR})
		AND service_type = "01"
		GROUP BY service_id
	</select>
</mapper>